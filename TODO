  * Further improve font handling so that font changes are minimised (change
	the order text boxes are drawn in so that the font need only be defined
	once per page).

  * Callback for error handling implementation.

  * Only one font will work per page at the moment. Fix this.

  * Make the \n -> \r\n conversion into a function call and make it faster...

  * Add see also sections in the man pages

  * Check that all of the malloc calls involving a strlen have 1 added to the
	the result of the strlen in a manner that allows the size of char to
	change.

  * Start using automake

  * Handling of vsnprintf return number based on the differnt ways that
	glibc behaves...

  * Arbitrary image rotations

  * Make all kinds of TIFFs work. There is currently on support for:
      - LZW
      - Deflated (zip)
      - Uncompressed
      - Packbits

  * At the moment you can only have background images, make foreground images
	work as well... (I think I have this arse about -- you can only have 
	foreground images...)

  * Be a bit more sensible in some of our error handling, for instance, if we
  	can't find a file to include in the PDF we shouldn't exit -- we should
	report it to the calling function and let them deal with it...

  * Documentation!

  * Linearisation (also known as optimised PDF)

  * Validity checks for things like names

  * TIFF support does not currently include the following compression options:
	- NONE
	- Flate
	- LZW (never!)
	- Packbit

  * More work on the lexer

  * PNG support

  * New font ids are handed out too often -- what about font reuse?

  * Handle image reuse better

  * Are the font man pages right? Perhaps I changed them to something that was
	wrong in a fit of confusion.

  * Memory leaks caused by createfont in main()
