<!-- $Id: panda.xml,v 1.3 2004/04/29 21:20:38 tadpole Exp $ -->
<?xml version='1.0' encoding='iso-8859-1'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "docbook/xml-dtd-4.1.2/docbookx.dtd">
<book><!-- Parts of this are from the FANN documentation. -->
  <bookinfo id="bookinfo">
    <title>Panda</title>
    <authorgroup id="authors">
      <author>
        <firstname>Michael</firstname>
        <surname>Still</surname>
      </author>
      <author>
        <firstname>Evan</firstname>
        <surname>Nemerson</surname>
      </author>
    </authorgroup>
    <copyright>
      <year>2004</year>
    </copyright>
  </bookinfo>
  <chapter id="intro">
    <title id="intro.title">Introduction</title>
    <para>
      Panda is a PDF creation API written in C. It is dual licensed under the GNU GPL or LGPL. Panda
      is written almost entirely by Michael Still, but is now maintained by Evan Nemerson.
    </para>
    <section id="intro.getting">
      <title id="intro.getting.title">Getting Panda</title>
      <para>
        Panda can be downloaded from several locations. The preferred location is from
	<ulink url="http://savannah.nongnu.org/projects/panda">Savannah</ulink>, but it is also
	available from <ulink url="http://www.sourceforge.net/projects/panda">SourceForge</ulink> and
	<ulink url="http://www.stillhq.com/cgi-bin/getpage?area=panda&amp;page=index.htm">stillhq.com</ulink>.
      </para>
    </section>
    <section id="intro.install">
      <title>Installation</title>
      <section id="intro.install.rpm">
        <title>RPMs</title>
        <para>
	  RPMs are a simple way to manage packages, and is used on many common Linux distributions such as 
          <ulink url="http://www.redhat.com">Red Hat</ulink>, <ulink url="http://www.mandrake.com/">Mandrake</ulink>,
	  and <ulink url="http://www.suse.com/">SuSE</ulink>.
	</para>
	<para>
	  Two seperate packages exist; fann, the runtime library, and fann-devel, the development library and
	  header files.
	</para>
        <para>
	  After downloading Panda, simply run (as root) the following command: <command>rpm -ivh $PATH_TO_RPM</command>
	</para>
      </section>
      <section id="intro.install.win32">
        <title>Windows</title>
	<para>
	  Panda includes a Microsoft Visual C++ 6.0 project file, which can be used to compile Panda for Windows.
	  To build the library and examples with MSVC++ 6.0:
	</para>
      </section>
      <section id="intro.install.src">
        <title id="intro.install.src.title">Compiling from source</title>
        <para>
	  Compiling Panda from source code entails the standard GNU autotools technique. First, configure the package as
	  you want it by typing (in the Panda directory), <command>./configure</command> If you need help choosing the
	  options you would like to use, try <command>./configure --help</command>
	</para>
        <para>
	  Next, you have to actually compile the library. To do this, simply type <command>make</command>
	</para>
	<para>
	  Finally, to install the library, type <command>make install</command>. Odds are you will have to
	  be root to install, so you may need to <command>su</command> to root before installing. Please
	  remember to log out of the root account immediately after <command>make install</command> finishes.
	</para>
      </section>
    </section>
    <section id="intro.start">
      <title id="intro.start.title">Getting Started</title>
      <para>
        TODO: Short tutorial.
      </para>
    </section>
    <section id="intro.help">
      <title id="intro.help.title">Getting Help</title>

      <para>
        If after reading the documentation you are still having problems, or have a question that is not covered in the documentation,
	please consult the panda-users mailing list. Archives and subscription information are available
	<ulink url="https://lists.sourceforge.net/lists/listinfo/panda-users">here</ulink>. 
      </para>
    </section>
    <section id="intro.advanced">
      <title id="intro.advanced.title">Advanced Usage</title>

      <para>
        TODO: Advanced stuff not covered elsewhere, like writing low-level functions to create dictionaries, etc.
      </para>
    </section>
  </chapter>
  <chapter id="api">
    <title id="api.title">API Reference</title>

    <para>
      This chapter will provide an in-depth look at each function in the Panda library.
    </para>

    <section id="api.basic">
      <title id="api.basic.title">Basic Functions</title>

      <para>
        This section contains functions for basic operations, such as PDF creation,
	destruction, and writing files to the disk.
      </para>

      <refentry id="api.panda_init">
        <refnamediv>
          <refname id="api.panda_init.title">panda_init</refname>
          <refpurpose>Initialize the library.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_init</methodname>
            <methodparam>
              <type>void</type>
	      <parameter></parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Performs some simple setup of Panda before it is used for the first time in your application.
	  </para>
	  <example id="api.panda_init.example">
	    <title id="api.panda_init.example.title"><function><link linkend="api.panda_init" endterm="api.panda_init.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_init();
]]>
	    </programlisting>
	  </example>
        </refsect1>
      </refentry>

      <refentry id="api.panda_open">
        <refnamediv>
          <refname id="api.panda_open.title">panda_open</refname>
          <refpurpose>open a PDF document</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>panda_pdf *</type>
            <methodname>panda_open</methodname>
            <methodparam>
              <type>char *</type>
              <parameter>filename</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>mode</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Open the named PDF document with the mode specified. The only mode currently
	    supported is "w", but others will be integrated later. The interface to this
	    function is identical in it's behaviour to the <function>fopen</function>
	    function call offered by the ANSI C standard IO library.
	  </para>
	  <para>
	    <emphasis>Returns:</emphasis> A pointer to a panda_pdf structure on success,
	    NULL on failure.
	  </para>
	  <example id="api.panda_open.example">
	    <title id="api.panda_open.example.title"><function><link linkend="api.panda_open" endterm="api.panda_open.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_init" endterm="api.panda_init.title"/></function>,
	    <function><link linkend="api.panda_open_actual" endterm="api.panda_open_actual.title"/></function>,
	    <function><link linkend="api.panda_open_suppress" endterm="api.panda_open_suppress.title"/></function>,
	    <function><link linkend="api.panda_close" endterm="api.panda_close.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_close">
        <refnamediv>
          <refname id="api.panda_close.title">panda_close</refname>
          <refpurpose>write a PDF document out to disk</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_close</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Write out the PDF document we have created to disk, clean up and free memory.
	  </para>
	  <example id="api.panda_close.example">
	    <title id="api.panda_close.example.title"><function><link linkend="api.panda_close" endterm="api.panda_close.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);
panda_close(document);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_open" endterm="api.panda_open.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_newpage">
        <refnamediv>
          <refname id="api.panda_newpage.title">panda_newpage</refname>
          <refpurpose>create a new page in the PDF</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>panda_page *</type>
            <methodname>panda_newpage</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter></parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>page_size</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Create a new blank page at the end of the PDF with the
	    specified size. Use the standard pagesize strings that are
	    defined by Panda for most things.  These are
	    panda_pagesize_a4, and panda_pagesize_usletter. If you
	    need to create your own page sizes, then have a look at
	    these for hints.
	  </para>
	  <example id="api.panda_newpage.example">
	    <title id="api.panda_newpage.example.title"><function><link linkend="api.panda_newpage" endterm="api.panda_newpage.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_open" endterm="api.panda_open.title"/></function>,
	    <function><link linkend="api.panda_close" endterm="api.panda_close.title"/></function>
	  </para>
        </refsect1>
      </refentry>
    </section>

    <section id="api.text">
      <title id="api.text.title">Text Functions</title>

      <para>
        These functions control the text of a PDF.
      </para>

      <refentry id="api.panda_setfont">
        <refnamediv>
          <refname id="api.panda_setfont.title">panda_setfont</refname>
          <refpurpose>set the current font</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setfont</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>font</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Once you have generated a font identifier for a given
	    font, you can then set that current font to that font
	    using this call. Create a font identifier with the
	    <function><link linkend="api.panda_createfont" endterm="api.panda_createfont.title"/></function> call.
	  </para>
	  <example id="api.panda_setfont.example">
	    <title id="api.panda_setfont.example.title"><function><link linkend="api.panda_setfont" endterm="api.panda_setfont.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *output;
char *fonthandle;

panda_init();
output = panda_open ("output.pdf", "w");
fonthandle = panda_createfont (output, "Helventica", 3, "MacRomanEncoding");
panda_setfont (fonthandle);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_createfont" endterm="api.panda_createfont.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setfontsize">
        <refnamediv>
          <refname id="api.panda_setfontsize.title">panda_setfontsize</refname>
          <refpurpose>set the current font size</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setfontsize</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>size</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Set the size of the font to be used next (in points).
	  </para>
	  <example id="api.panda_setfontsize.example">
	    <title id="api.panda_setfontsize.example.title"><function><link linkend="api.panda_setfontsize" endterm="api.panda_setfontsize.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *output;

panda_init();
output = panda_open("output.pdf", "w");
setfontsize(output, 42);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setfont" endterm="api.panda_setfont.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setfontmode">
        <refnamediv>
          <refname id="api.panda_setfontmode.title">panda_setfontmode</refname>
          <refpurpose>set the current font mode</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setfontmode</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>mode</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Set the drawing mode for the current font. Valid modes
	    are: panda_textmode_normal, panda_textmode_outline,
	    panda_textmode_filledoutline, panda_textmode_invisible,
	    panda_textmode_filledclipped,
	    panda_textmode_strokedclipped,
	    panda_textmode_filledstrokedclipped and
	    panda_textmode_clipped.
	  </para>
	  <example id="api.panda_setfontmode.example">
	    <title id="api.panda_setfontmode.example.title"><function><link linkend="api.panda_setfontmode" endterm="api.panda_setfontmode.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *output;

panda_init();
output = panda_open("output.pdf", "w");
panda_setfontmode(output, panda_textmode_outline);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setfont" endterm="api.panda_setfont.title"/></function>,
	    <function><link linkend="api.panda_setfontsize" endterm="api.panda_setfontsize.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setcharacterspacing">
        <refnamediv>
          <refname id="api.panda_setcharacterspacing.title">panda_setcharacterspacing</refname>
          <refpurpose>set the space between characters</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setcharacterspacing</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>double</type>
              <parameter>amount</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Set the amount of additional space between characters in points.
	  </para>
	  <example id="api.panda_setcharacterspacing.example">
	    <title id="api.panda_setcharacterspacing.example.title"><function><link linkend="api.panda_setcharacterspacing" endterm="api.panda_setcharacterspacing.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *output;

panda_init();
output = panda_open("output.pdf", "w");
panda_setcharacterspacing(output, 42.3);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setwordspacing" endterm="api.panda_setwordspacing.title"/></function>,
	    <function><link linkend="api.panda_sethorizontalscaling" endterm="api.panda_sethorizontalscaling.title"/></function>,
	    <function><link linkend="api.panda_setleading" endterm="api.panda_setleading.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setwordspacing">
        <refnamediv>
          <refname id="api.panda_setwordspacing.title">panda_setwordspacing</refname>
          <refpurpose>set the space between words</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setwordspacing</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>double</type>
              <parameter>amount</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Set the amount of additional space between words in points.
	  </para>
	  <example id="api.panda_setwordspacing.example">
	    <title id="api.panda_setwordspacing.example.title"><function><link linkend="api.panda_setwordspacing" endterm="api.panda_setwordspacing.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *output;

panda_init();
output = panda_open("output.pdf", "w");
panda_setwordspacing(output, 42.3);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setcharacterspacing" endterm="api.panda_setcharacterspacing.title"/></function>,
	    <function><link linkend="api.panda_sethorizontalscaling" endterm="api.panda_sethorizontalscaling.title"/></function>,
	    <function><link linkend="api.panda_setleading" endterm="api.panda_setleading.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_sethorizontalscaling">
        <refnamediv>
          <refname id="api.panda_sethorizontalscaling.title">panda_sethorizontalscaling</refname>
          <refpurpose>set the horizontal scaling of text</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_sethorizontalscaling</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>double</type>
              <parameter>amount</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Set the horizontal scaling factor of the text in percent.
	  </para>
	  <example id="api.panda_sethorizontalscaling.example">
	    <title id="api.panda_sethorizontalscaling.example.title"><function><link linkend="api.panda_sethorizontalscaling" endterm="api.panda_sethorizontalscaling.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *output;

panda_init();
output = panda_open("output.pdf", "w");
panda_sethorizontalscaling(output, 42.3);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setwordspacing" endterm="api.panda_setwordspacing.title"/></function>,
	    <function><link linkend="api.panda_setcharacterspacing" endterm="api.panda_setcharacterspacing.title"/></function>,
	    <function><link linkend="api.panda_setleading" endterm="api.panda_setleading.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setleading">
        <refnamediv>
          <refname id="api.panda_setleading.title">panda_setleading</refname>
          <refpurpose>set the amount of space between lines of text</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setleading</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>double</type>
              <parameter>leading</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Set the amount of space between lines of text in points.
	  </para>
	  <example id="api.panda_setleading.example">
	    <title id="api.panda_setleading.example.title"><function><link linkend="api.panda_setleading" endterm="api.panda_setleading.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *output;

panda_init();
output = panda_open("output.pdf", "w");
panda_setleading(output, 42.3);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setwordspacing" endterm="api.panda_setwordspacing.title"/></function>,
	    <function><link linkend="api.panda_setcharacterspacing" endterm="api.panda_setcharacterspacing.title"/></function>,
	    <function><link linkend="api.panda_sethorizontalscaling" endterm="api.panda_sethorizontalscaling.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_textbox">
        <refnamediv>
          <refname id="api.panda_textbox.title">panda_textbox</refname>
          <refpurpose>display some text on the PDF page specified</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_textbox</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>bottom</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>right</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>text</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function call creates a textbox on the specified
	    page, and then displays the specified text within that
	    page. The current font mode and style et cetera will be
	    used.
	  </para>
	  <example id="api.panda_textbox.example">
	    <title id="api.panda_textbox.example.title"><function><link linkend="api.panda_textbox" endterm="api.panda_textbox.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);
panda_textbox (demo, currPage, 20 + (lineDepth * 20), 200, 40 + (lineDepth * 20), 400, "Demonstration of a text mode");
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_textboxrot" endterm="api.panda_textboxrot.title"/></function>
	    <function><link linkend="api.panda_textboxrotalign" endterm="api.panda_textboxrotalign.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_textboxrot">
        <refnamediv>
          <refname id="api.panda_textboxrot.title">panda_textboxrot</refname>
          <refpurpose>create a text box at a specified angle</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type></type>
            <methodname>panda_textboxrot</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>bottom</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>right</parameter>
            </methodparam>
            <methodparam>
              <type>double</type>
              <parameter>angle</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>text</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function call creates a textbox on the specified
	    page, and then displays the specified text within that
	    page. The text is displayed at the spefied angle. The
	    current font mode and style et cetera will be used.
	  </para>
	  <example id="api.panda_textboxrot.example">
	    <title id="api.panda_textboxrot.example.title"><function><link linkend="api.panda_textboxrot" endterm="api.panda_textboxrot.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);
panda_textboxrot (demo, currPage, 20 + (lineDepth * 20), 200, 40 + (lineDepth * 20), 400, 33.0, "Demonstration of a text mode");
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_textbox" endterm="api.panda_textbox.title"/></function>
	    <function><link linkend="api.panda_textboxrotalign" endterm="api.panda_textboxrotalign.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_textboxrotalign">
        <refnamediv>
          <refname id="api.panda_textboxrotalign.title">panda_textboxrotalign</refname>
          <refpurpose>create a text box rotated at a specified angle with a specified text alignment</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type></type>
            <methodname>panda_textboxrotalign</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>bottom</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>right</parameter>
            </methodparam>
            <methodparam>
              <type>double</type>
              <parameter>angle</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>valign</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>text</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function call creates a textbox on the specified
	    page, and then displays the specified text within that
	    page. The text is displayed at the spefied angle, aligned
	    vertically to either the top or bottom of the text
	    box. The current font mode and style et cetera will be
	    used.
	  </para>
	  <para>
	    <parameter>valign</parameter> is either panda_valign_top or panda_valign_bottom.
	  </para>
	  <example id="api.panda_textboxrotalign.example">
	    <title id="api.panda_textboxrotalign.example.title"><function><link linkend="api.panda_textboxrotalign" endterm="api.panda_textboxrotalign.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);
panda_textboxrotalign (demo, currPage, 20 + (lineDepth * 20), 200, 40 + (lineDepth * 20), 400, 33.0, panda_valign_top, "Demonstration of a text mode");
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_textbox" endterm="api.panda_textbox.title"/></function>
	    <function><link linkend="api.panda_textboxrot" endterm="api.panda_textboxrot.title"/></function>
	  </para>
        </refsect1>
      </refentry>
    </section>

    <section id="api.image">
      <title id="api.image.title">Image Functions</title>

      <para>
        These function deal with images.
      </para>

      <refentry id="api.panda_imagebox">
        <refnamediv>
          <refname id="api.panda_imagebox.title">panda_imagebox</refname>
          <refpurpose>insert an image into the PDF document at the specified location</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_imagebox</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>bottom</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>right</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>filename</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>type</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function call inserts an image into the PDF document
	    at the specified location using a reasonable default for
	    rotation (none). This call is included for backward
	    compatability with previous releases of the API and it is
	    recommened that new code call
	    <function><link linkend="api.panda_imageboxrot" endterm="api.panda_imageboxrot.title"/></function>. It is unlikely
	    that this call will be retired however. The image types
	    accepted by this call are: panda_image_tiff,
	    panda_image_jpeg and panda_image_png.
	  </para>
	  <example id="api.panda_imagebox.example">
	    <title id="api.panda_imagebox.example.title"><function><link linkend="api.panda_imagebox" endterm="api.panda_imagebox.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *demo;
panda_page *currPage;

panda_init ();

if ((demo = panda_open ("output.pdf", "w")) == NULL)
  panda_error (panda_true, "demo: could not open output.pdf to write to.");

currPage = panda_newpage (demo, panda_pagesize_a4);
  
panda_imagebox (demo, currPage, 0, 0, currPage->height / 2,
  currPage->width, "input.tif", panda_image_tiff);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_imageboxrot" endterm="api.panda_imageboxrot.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_imageboxrot">
        <refnamediv>
          <refname id="api.panda_imageboxrot.title">panda_imageboxrot</refname>
          <refpurpose>insert an image into the PDF document</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_imageboxrot</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>bottom</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>right</parameter>
            </methodparam>
            <methodparam>
              <type>double</type>
              <parameter>angle</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>filename</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>type</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function call inserts an image into the PDF document
	    at the specified location, including the ability to rotate
	    the image on the page. It should be noted that xpdf will
	    sometimes make the rotated image look quite sickly. This
	    is in fact a bug in xpdf (which has been reported), and
	    not a bug in Panda. The image types accepted by this call
	    are: panda_image_tiff, panda_image_jpeg and
	    panda_image_png.
	  </para>
	  <para>
	    This function will check to see if an image has already
	    been inserted elsewhere. If the image is already present,
	    Panda will simple insert a pointer to that image instead
	    of inserting another copy of the image. If you really want
	    to insert multiple copies of the same image, use <link
	    linkend="api.panda_imageboxactual"><function><link linkend="api.panda_imageboxactual" endterm="api.panda_imageboxactual.title"/></function></link>
	  </para>
	  <example id="api.panda_imageboxrot.example">
	    <title id="api.panda_imageboxrot.example.title"><function><link linkend="api.panda_imageboxrot" endterm="api.panda_imageboxrot.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *demo;
panda_page *currPage;

panda_init ();

if ((demo = panda_open ("output.pdf", "w")) == NULL)
  panda_error (panda_true, "demo: could not open output.pdf to write to.");

currPage = panda_newpage (demo, panda_pagesize_a4);
  
panda_imagebox (demo, currPage, 0, 0, currPage->height / 2,
  currPage->width, 45.0, "input.tif", panda_image_tiff);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_imageboxactual" endterm="api.panda_imageboxactual.title"/></function>,
	    <function><link linkend="api.panda_imagebox" endterm="api.panda_imagebox.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_insertTIFF">
        <refnamediv>
          <refname id="api.panda_insertTIFF.title">panda_insertTIFF</refname>
          <refpurpose>insert a TIFF image into the PDF</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_insertTIFF</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>panda_object *</type>
              <parameter>imageObj</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>filename</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Do the actual insertion of the TIFF image into the PDF
	    document. This routine handles the conversion of the TIFF
	    image into the form supported by the PDF specification,
	    and similar operations. It is an internal Panda call and
	    should not be needed by users of the API.
	  </para>
	  <para>
	    See <link
	    linkend="api.panda_imageboxrot"><function><link linkend="api.panda_imageboxrot" endterm="api.panda_imageboxrot.title"/></function></link>
	    for an example.
	  </para>
	  <para>
	    See also:
	    <function><link linkend="api.panda_imagebox" endterm="api.panda_imagebox.title"/></function>,
	    <function><link linkend="api.panda_imageboxrot" endterm="api.panda_imageboxrot.title"/></function>,
	    <function><link linkend="api.panda_insertJPEG" endterm="api.panda_insertJPEG.title"/></function>,
	    <function><link linkend="api.panda_insertPNG" endterm="api.panda_insertPNG.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_insertJPEG">
        <refnamediv>
          <refname id="api.panda_insertJPEG.title">panda_insertJPEG</refname>
          <refpurpose>insert a JPEG image into the PDF</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_insertJPEG</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>panda_object *</type>
              <parameter>imageObj</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>filename</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Do the actual insertion of the JPEG image into the PDF
	    document. This routine handles the conversion of the JPEG
	    image into the form supported by the PDF specification,
	    and similar operations. It is an internal
	    Panda call and should not be needed by
	    users of the API.
	  </para>
	  <para>
	    See <link
	    linkend="api.panda_imageboxrot"><function><link linkend="api.panda_imageboxrot" endterm="api.panda_imageboxrot.title"/></function></link>
	    for an example.
	  </para>
	  <para>
	    See also:
	    <function><link linkend="api.panda_imagebox" endterm="api.panda_imagebox.title"/></function>,
	    <function><link linkend="api.panda_imageboxrot" endterm="api.panda_imageboxrot.title"/></function>,
	    <function><link linkend="api.panda_insertJPEG" endterm="api.panda_insertJPEG.title"/></function>,
	    <function><link linkend="api.panda_insertPNG" endterm="api.panda_insertPNG.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_insertPNG">
        <refnamediv>
          <refname id="api.panda_insertPNG.title">panda_insertPNG</refname>
          <refpurpose>insert a PNG image into the PDF</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_insertPNG</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>panda_object *</type>
              <parameter>imageObj</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>filename</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Do the actual insertion of the PNG image into the PDF
	    document. This routine handles the conversion of the PNG
	    image into the form supported by the PDF specification,
	    and similar operations. It is an internal Panda call and
	    should not be needed by users of the API.
	  </para>
	  <para>
	    While developing this function call, some reference was
	    made to the source code for <ulink
	    url="http://www.lowagie.com/iText">iText</ulink>, which is
	    a GPL'ed PDF generator written in Java. The code in Panda
	    is original though...
	  </para>
	  <para>
	    See <link
	    linkend="api.panda_imageboxrot"><function><link linkend="api.panda_imageboxrot" endterm="api.panda_imageboxrot.title"/></function></link>
	    for an example.
	  </para>
	  <para>
	    See also:
	    <function><link linkend="api.panda_imagebox" endterm="api.panda_imagebox.title"/></function>,
	    <function><link linkend="api.panda_imageboxrot" endterm="api.panda_imageboxrot.title"/></function>,
	    <function><link linkend="api.panda_insertJPEG" endterm="api.panda_insertJPEG.title"/></function>,
	    <function><link linkend="api.panda_insertPNG" endterm="api.panda_insertPNG.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_imagesize">
        <refnamediv>
          <refname id="api.panda_imagesize.title">panda_imagesize</refname>
          <refpurpose>determine the size of an image</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_imagesize</methodname>
            <methodparam>
              <type>int *</type>
              <parameter>width</parameter>
            </methodparam>
            <methodparam>
              <type>int *</type>
              <parameter>height</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>filename</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>type</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function can be used to determine the size of an
	    image before a <function><link linkend="api.panda_imagebox" endterm="api.panda_imagebox.title"/></function>
	    function call.
	  </para>
	  <example id="api.panda_imagesize.example">
	    <title id="api.panda_imagesize.example.title"><function><link linkend="api.panda_imagesize" endterm="api.panda_imagesize.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

int height, width;

panda_init ();
  
panda_imagesize (&width, &height, "input.tif", panda_image_tiff);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_imagebox" endterm="api.panda_imagebox.title"/></function>,
	    <function><link linkend="api.panda_imageboxrot" endterm="api.panda_imageboxrot.title"/></function>,
	    <function><link linkend="api.panda_imagesizeTIFF" endterm="api.panda_imagesizeTIFF.title"/></function>,
	    <function><link linkend="api.panda_imagesizeJPEG" endterm="api.panda_imagesizeJPEG.title"/></function>,
	    <function><link linkend="api.panda_imagesizePNG" endterm="api.panda_imagesizePNG.title"/></function>
	  </para>
        </refsect1>
      </refentry>
    </section>

    <section id="api.date">
      <title id="api.date.title">Date Functions</title>

      <refentry id="api.panda_makedate">
        <refnamediv>
          <refname id="api.panda_makedate.title">panda_makedate</refname>
          <refpurpose>format a date into the internal PDF representation</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>char *</type>
            <methodname>panda_makedate</methodname>
            <methodparam>
              <type>int</type>
              <parameter>year</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>month</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>day</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>hour</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>minute</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>second</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    The function makedate generates a date that is suitable to
	    be embedded into a PDF. This date will include information
	    about the timezone in which the PDF was created and the
	    relationship that this timezone has with GMT (Zulu)
	    time. Mostly this function is used internally within
	    Panda, and should not concern the average programmer too
	    much.
	  </para>
	  <example id="api.panda_makedate.example">
	    <title id="api.panda_makedate.example.title"><function><link linkend="api.panda_makedate" endterm="api.panda_makedate.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

printf("Panda would encode 19 July 1977 3:14:23 AM as: %s\n",
  panda_makedate(1977, 7, 19, 3, 14, 23));
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_nowdate" endterm="api.panda_nowdate.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_nowdate">
        <refnamediv>
          <refname id="api.panda_nowdate.title">panda_nowdate</refname>
          <refpurpose>return the string for now</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>char *</type>
            <methodname>panda_nowdate</methodname>
            <methodparam>
              <type>void</type>
              <parameter></parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    The function nowdate generates a date that is suitable to
	    be embedded into a PDF. This date will include information
	    about the timezone in which the PDF was created and the
	    relationship that this timezone has with GMT (Zulu)
	    time. Mostly this function is used internally within
	    Panda, and should not concern the avaerage programmer too
	    much. This version takes no input, and makes a date for
	    the current time.
	  </para>
	  <example id="api.panda_nowdate.example">
	    <title id="api.panda_nowdate.example.title"><function><link linkend="api.panda_nowdate" endterm="api.panda_nowdate.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

printf("The time now is %s\n", panda_nowdate());
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_makedate" endterm="api.panda_makedate.title"/></function>
	  </para>
        </refsect1>
      </refentry>
    </section>

    <section id="api.error">
      <title id="api.error.title">Error Handling</title>

      <refentry id="api.panda_error">
        <refnamediv>
          <refname id="api.panda_error.title">panda_error</refname>
          <refpurpose>handle an error</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type></type>
            <methodname>panda_error</methodname>
            <methodparam>
              <type>int</type>
              <parameter>fatal</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>message</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	     Print out the error message to stderr and then exit (if fatal is panda_true).
	  </para>
	  <example id="api.panda_error.example">
	    <title id="api.panda_error.example.title"><function><link linkend="api.panda_error" endterm="api.panda_error.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_error (panda_true, "All is rotten in the state of Denmark");
]]>
	    </programlisting>
	  </example>
        </refsect1>
      </refentry>
    </section>

    <section id="api.annotate">
      <title id="api.annotate.title">Annotations</title>

      <refentry id="api.panda_textannotation">
        <refnamediv>
          <refname id="api.panda_textannotation.title">panda_textannotation</refname>
          <refpurpose>draw a text annotation which looks like a sticky note onto a page</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_textannotation</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>open</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>text</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>bottom</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>right</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>icon</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>flags</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function inserts a text annotation onto one of the pages in your PDF document.
	    The open arguement defines whether the text annotation initially appears with the
	    text visible (the open state) or not. The possible values for the icon arguement
	    are: panda_icon_comment; panda_icon_help; panda_icon_insert; panda_icon_key;
	    panda_icon_newparagraph; panda_icon_note; panda_icon_paragraph. The possible values
	    for the flags arguement are: panda_annotationflag_invisible; panda_annotationflag_hidden;
	    panda_annotationflag_print; panda_annotationflag_nozoom; panda_annotationflag_norotate;
	    panda_annotationflag_noview; panda_annotationflag_readonly -- the values for this
	    arguement may by OR'ed together if needed.
	  </para>
	  <para>
	    Please note that not all PDF viewers support annotations, so you cannot gaurantee that
	    the user will see this annotation...
	  </para>
	  <example id="api.panda_textannotation.example">
	    <title id="api.panda_textannotation.example.title"><function><link linkend="api.panda_textannotation" endterm="api.panda_textannotation.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *demo;
panda_page *currPage;

panda_init();
if ((demo = panda_open ("output.pdf", "w")) == NULL)
    panda_error (panda_true, "demo: could not open output.pdf to write to.");
currPage = panda_newpage (demo, panda_pagesize_a4);

panda_textannotation(demo, currPage, panda_true, "Hello", 10, 10, 50, 50,
                       panda_icon_comment, 0);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_freetextannotation" endterm="api.panda_freetextannotation.title"/></function>
	    <function><link linkend="api.panda_insertannotation" endterm="api.panda_insertannotation.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_freetextannotation">
        <refnamediv>
          <refname id="api.panda_freetextannotation.title">panda_freetextannotation</refname>
          <refpurpose>draw a text annotation which doesn't look like a sticky note onto a page</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_freetextannotation</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>open</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>text</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>bottom</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>right</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>icon</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>flags</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function inserts a text annotation onto one of the pages in your PDF document.
	    The possible values for the flags arguement are: panda_annotationflag_invisible;
	    panda_annotationflag_hidden; panda_annotationflag_print; panda_annotationflag_nozoom;
	    panda_annotationflag_norotate; panda_annotationflag_noview;
	    panda_annotationflag_readonly -- the values for this arguement may by OR'ed together
	    if needed.
	  </para>
	  <para>
	    Please note that not all PDF viewers support annotations, so you cannot gaurantee that
	    the user will see this annotation...
	  </para>
	  <example id="api.panda_freetextannotation.example">
	    <title id="api.panda_freetextannotation.example.title"><function><link linkend="api.panda_freetextannotation" endterm="api.panda_freetextannotation.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *demo;
panda_page *currPage;

panda_init();
if ((demo = panda_open ("output.pdf", "w")) == NULL)
    panda_error (panda_true, "demo: could not open output.pdf to write to.");
currPage = panda_newpage (demo, panda_pagesize_a4);

panda_freetextannotation(demo, currPage, "Hello", 10, 10, 50, 50, 0);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_textannotation" endterm="api.panda_textannotation.title"/></function>,
	    <function><link linkend="api.panda_insertannotation" endterm="api.panda_insertannotation.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_lineannotation">
        <refnamediv>
          <refname id="api.panda_lineannotation.title">panda_lineannotation</refname>
          <refpurpose>insert a line annotation</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_lineannotation</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>text</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>title</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>x1</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>y1</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>x2</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>y2</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>bottom</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>right</parameter>
            </methodparam>
            <methodparam>
              <type>double</type>
              <parameter>red</parameter>
            </methodparam>
            <methodparam>
              <type>double</type>
              <parameter>green</parameter>
            </methodparam>
            <methodparam>
              <type>double</type>
              <parameter>blue</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>flags</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function will insert a line annotation int <parameter>page</parameter> in
	    <parameter>document</parameter>. 
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_urilink">
        <refnamediv>
          <refname id="api.panda_urilink.title">panda_urilink</refname>
          <refpurpose>insert link to a URI</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_urilink</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>uri</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>bottom</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>right</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>border</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function will create a link to a URI based on the supplied arguments.
	  </para>
	  <example id="api.panda_urilink.example">
	    <title id="api.panda_urilink.example.title"><function><link linkend="api.panda_urilink" endterm="api.panda_urilink.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *demo;
panda_page *currPage;

panda_init();
if ((demo = panda_open ("output.pdf", "w")) == NULL)
    panda_error (panda_true, "demo: could not open output.pdf to write to.");
currPage = panda_newpage (demo, panda_pagesize_a4);

panda_urilink (demo, currPage, "http://www.google.com/", 5, 5, 100, 100, 1);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_link" endterm="api.panda_link.title"/></function>,
	    <function><link linkend="api.panda_internallink" endterm="api.panda_internallink.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_link">
        <refnamediv>
          <refname id="api.panda_link.title">panda_link</refname>
          <refpurpose>create a link to an internal location in a PDF.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_link</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>dest</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>dest_top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>dest_left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>zoom</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>source</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>bottom</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>right</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>border</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function will create a link to (<parameter>dest_top</parameter>, <parameter>dest_left</parameter>)
	    on <parameter>dest</parameter> from <parameter>source</parameter>.
	  </para>
	  <example id="api.panda_link.example">
	    <title id="api.panda_link.example.title"><function><link linkend="api.panda_link" endterm="api.panda_link.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *demo;
panda_page *Page1, *Page2;

panda_init();
if ((demo = panda_open ("output.pdf", "w")) == NULL)
    panda_error (panda_true, "demo: could not open output.pdf to write to.");
Page1 = panda_newpage (demo, panda_pagesize_a4);
Page2 = panda_newpage (demo, panda_pagesize_a4);

panda_link (demo, Page1, 0, 0, 0, Page2, 5, 5, 100, 100, 1);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_urilink" endterm="api.panda_urilink.title"/></function>,
	    <function><link linkend="api.panda_internallink" endterm="api.panda_internallink.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_outlineitem">
        <refnamediv>
          <refname id="api.panda_outlineitem.title">panda_outlineitem</refname>
          <refpurpose>create an outline item (commonly referred to as a bookmark).</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>panda_outline *</type>
            <methodname>panda_outlineitem</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_outline *</type>
              <parameter>parent</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>title</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>destination</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>dest_top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>dest_left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>zoom</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Create an outline item with the specified proerties. If the second argument is NULL, it will be assumed
	    that this is a top level outline. Otherwise, it must be a pointer an address of a previously created
	    outline, and the new outline will be created as sub-outline of that outline.
	  </para>
	  <example id="api.panda_outlineitem.example">
	    <title id="api.panda_outlineitem.example.title"><function><link linkend="api.panda_outlineitem" endterm="api.panda_outlineitem.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *pdf;
panda_page *page;
panda_outline *main_document;
char *tmpPtr;
int x;

pdf = panda_open("outlines.pdf", "w");
for ( x=0 ; x<10 ; x++ ) {
  page = panda_newpage(pdf, panda_pagesize_a4);
  main_document = panda_outlineitem(pdf, NULL, tmpPtr = panda_xsnprintf("Section %d", x+1), page, 0, 0, 0);
  panda_xfree(tmpPtr);
  panda_outlineitem(pdf, main_document, "Sub 1", page, 100, 0, 0);
  panda_outlineitem(pdf, main_document, "Sub 2", page, 200, 0, 0);
}
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_writeoutline" endterm="api.panda_writeoutline.title"/></function>
	  </para>
        </refsect1>
      </refentry>
    </section>

    <section id="api.drawing">
      <title id="api.drawing.title">Drawing Functions</title>

      <para>
        These functions are used to draw lines, curves, boxes, etc.
      </para>

      <refentry id="api.panda_setlinestart">
        <refnamediv>
          <refname id="api.panda_setlinestart.title">panda_setlinestart</refname>
          <refpurpose>sets the starting point of a line or curve</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setlinestart</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>x</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>y</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Set the starting point for the sequence of curves and lines that it to be drawn on the current page.
	    This call is compulsory for almost all of the line drawing functions. It is not required for the
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function> call.
	  </para>
	  <example id="api.panda_setlinestart.example">
	    <title id="api.panda_setlinestart.example.title"><function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addcubiccurvesegment" endterm="api.panda_addcubiccurvesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_addlinesegment">
        <refnamediv>
          <refname id="api.panda_addlinesegment.title">panda_addlinesegment</refname>
          <refpurpose>add a straight segment to the line shape we are drawing</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_addlinesegment</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>x</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>y</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Add a point to the shape we are currently drawing with a straight line between the current cursor location and (x,y).
	  </para>
	  <example id="api.panda_addlinesegment.example">
	    <title id="api.panda_addlinesegment.example.title"><function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_addlinesegment (page, 200, 200);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addcubiccurvesegment" endterm="api.panda_addcubiccurvesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_addcubiccurvesegment">
        <refnamediv>
          <refname id="api.panda_addcubiccurvesegment.title">panda_addcubiccurvesegment</refname>
          <refpurpose>add a curved segment to the line shape we are drawing</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_addcubiccurvesegment</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>x</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>y</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>cx1</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>cy1</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>cx2</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>cy2</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Add a point to the shape we are currently drawing with a cubic curve between the current
	    cursor location and (x,y). There are two control points used to generate the cubic curve.
	    They are (<parameter>cx1</parameter>, <parameter>cy1</parameter>) and
	    (<parameter>cx2</parameter>, <parameter>cy2</parameter>).
	  </para>
	  <example id="api.panda_addcubiccurvesegment.example">
	    <title id="api.panda_addcubiccurvesegment.example.title"><function><link linkend="api.panda_addcubiccurvesegment" endterm="api.panda_addcubiccurvesegment.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (currPage, 210, 210);
panda_addcubiccurvesegment (currPage, 310, 210, 225, 300, 275, 400);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_addquadraticcurvesegmentone">
        <refnamediv>
          <refname id="api.panda_addquadraticcurvesegmentone.title">panda_addquadraticcurvesegmentone</refname>
          <refpurpose>add a curved segment to the line shape that we are drawing</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_addquadraticcurvesegmentone</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>x</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>y</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>cx</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>cy</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function adds a curved segment to the line shape that we are drawing. The curved
	    segment has a control point, namely (cx1, cy1). This call creates slightly different
	    curves from <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>
	  </para>
	  <example id="api.panda_addquadraticcurvesegmentone.example">
	    <title id="api.panda_addquadraticcurvesegmentone.example.title"><function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_addquadraticcurvesegmentone (page, 200, 200, 12, 32);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_addquadraticcurvesegmenttwo">
        <refnamediv>
          <refname id="api.panda_addquadraticcurvesegmenttwo.title">panda_addquadraticcurvesegmenttwo</refname>
          <refpurpose>add a curved segment to the line shape that we are drawing</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_addquadraticcurvesegmenttwo</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>x</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>y</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>cx</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>cy</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function adds a curved segment to the line shape that we are drawing. The curved
	    segment has a control point, namely (cx1, cy1). This call creates slightly different
	    curves from <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>
	  </para>
	  <example id="api.panda_addquadraticcurvesegmenttwo.example">
	    <title id="api.panda_addquadraticcurvesegmenttwo.example.title"><function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_addquadraticcurvesegmenttwo (page, 200, 200, 12, 32);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_closeline">
        <refnamediv>
          <refname id="api.panda_closeline.title">panda_closeline</refname>
          <refpurpose>close off the line shape we are drawing</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_closeline</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Close the line shape we are drawing by returning to the starting point as set by
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>
	  </para>
	  <example id="api.panda_closeline.example">
	    <title id="api.panda_closeline.example.title"><function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_addlinesegment (page, 200, 200);
panda_addlinesegment (page, 400, 300);
panda_closeline (page);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_rectangle">
        <refnamediv>
          <refname id="api.panda_rectangle.title">panda_rectangle</refname>
          <refpurpose>draw a rectangle</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_rectangle</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>top</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>left</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>bottom</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>right</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Draw a rectangle on the PDF page. There is no need for the <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>
	    or <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function> calls.
	  </para>
	  <example id="api.panda_rectangle.example">
	    <title id="api.panda_rectangle.example.title"><function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_rectangle( page, 10, 10, 150, 200);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_endline">
        <refnamediv>
          <refname id="api.panda_endline.title">panda_endline</refname>
          <refpurpose>finalise the current line shape</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_endline</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	     Finalise the line shape we are drawing. Only one line shape may be drawn at any one time.
	     There is no need for this call with the <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function> call.
	  </para>
	  <example id="api.panda_endline.example">
	    <title id="api.panda_endline.example.title"><function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_addlinesegment (page, 200, 200);
panda_endline (page);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_strokeline">
        <refnamediv>
          <refname id="api.panda_strokeline.title">panda_strokeline</refname>
          <refpurpose>stroke the line shape we have just drawn</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_strokeline</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function must be called for the line shape that we have drawn to actually display on the
	    PDF page. This process is known as 'stroking', and hence the name of this function call.
	  </para>
	  <example id="api.panda_strokeline.example">
	    <title id="api.panda_strokeline.example.title"><function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_addlinesegment (page, 200, 200);
panda_strokeline (page);
panda_endline (page);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_fillline">
        <refnamediv>
          <refname id="api.panda_fillline.title">panda_fillline</refname>
          <refpurpose>fill the closed shape we just drew</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_fillline</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Fill the shape we have just drawn with the previously defined fill.
	  </para>
	  <example id="api.panda_fillline.example">
	    <title id="api.panda_fillline.example.title"><function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_addlinesegment (page, 200, 200);
panda_addlinesegment (page, 250, 250);
panda_endline (page);
panda_fillline (page);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setlinewidth">
        <refnamediv>
          <refname id="api.panda_setlinewidth.title">panda_setlinewidth</refname>
          <refpurpose>sets the width of the line that we are drawing</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setlinewidth</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>width</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Set the width of the line that is being drawn. You can use <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function> and <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function> to change other
	    characteristics of the line.
	  </para>
	  <example id="api.panda_setlinewidth.example">
	    <title id="api.panda_setlinewidth.example.title"><function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_setlinewidth (page, 42);
panda_addlinesegment (page, 200, 200);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setlinecap">
        <refnamediv>
          <refname id="api.panda_setlinecap.title">panda_setlinecap</refname>
          <refpurpose>sets the line cap for the lines we are drawing now</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setlinecap</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>cap</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    A line cap is used at the ends of lines that do not meet other lines. The different cap
	    styles are defined in panda/constants.h and are: panda_linecap_butt, panda_linecap_round
	    and panda_linecap_projectedsquare.
	  </para>
	  <example id="api.panda_setlinecap.example">
	    <title id="api.panda_setlinecap.example.title"><function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_setlinecap (page, panda_linecap_round);
panda_addlinesegment (page, 200, 200);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setlinejoin">
        <refnamediv>
          <refname id="api.panda_setlinejoin.title">panda_setlinejoin</refname>
          <refpurpose>is used to set the line join style</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setlinejoin</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>join</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    A line join is used where the ends of two lines meet. The valid line joins are defined in
	    <filename>panda/constants.h</filename> and are: panda_linejoin_miter, panda_linejoin_round
	    and panda_linejoin_bevel.
	  </para>
	  <example id="api.panda_setlinejoin.example">
	    <title id="api.panda_setlinejoin.example.title"><function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_setlinejoin (page, panda_linejoin_bevel);
panda_addlinesegment (page, 200, 200);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setlinedash">
        <refnamediv>
          <refname id="api.panda_setlinedash.title">panda_setlinedash</refname>
          <refpurpose>draw the subsequent lines with the defined dashing pattern</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setlinedash</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>on</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>off</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>phase</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function allows the user to define a line dashing style, which is
	    then applied to subsequent lines drawn on that page. The dashing style
	    is defined as a on and off number, as well as a phase. For example,
	    on = 2, off = 4, phase = 0 should result in a line like:
	    <programlisting>--    --    --    --    --    --    --</programlisting>
	    Whilst values of on = 2, off = 4, phase = 1 would give:
	    <programlisting>
	        --    --    --    --    --    --    --
	    </programlisting>
	  </para>
	  <example id="api.panda_setlinedash.example">
	    <title id="api.panda_setlinedash.example.title"><function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_setlinedash (page, 2, 4, 0);
panda_addlinesegment (page, 200, 200);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setfillcolor">
        <refnamediv>
          <refname id="api.panda_setfillcolor.title">panda_setfillcolor</refname>
          <refpurpose>set the color to fill a close shape with</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setfillcolor</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>red</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>green</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>blue</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function sets the color to fill a close shape with when the shape is closed. It
	    is expressed as a combinartion of red, green, and blue. The maximum number for each
	    value is 255 (a number greater than 255 is reduced to 255).
	  </para>
	  <example id="api.panda_setfillcolor.example">
	    <title id="api.panda_setfillcolor.example.title"><function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_setfillcolor (page, 100, 200, 300);
panda_addlinesegment (page, 200, 200);
panda_addlinesegment (page, 250, 300);
panda_closeline (page);
panda_endline (page);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setlinecolor">
        <refnamediv>
          <refname id="api.panda_setlinecolor.title">panda_setlinecolor</refname>
          <refpurpose>change the color of the line drawn</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setlinecolor</methodname>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>red</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>green</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>blue</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    Set the color of lines being drawn using a combination of red, green and blue.
	  </para>
	  <example id="api.panda_setlinecolor.example">
	    <title id="api.panda_setlinecolor.example.title"><function><link linkend="api.panda_setlinecolor" endterm="api.panda_setlinecolor.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_setlinestart (page, 100, 200);
panda_setlinecolor (page, 100, 200, 450);
panda_addlinesegment (page, 200, 200);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setlinestart" endterm="api.panda_setlinestart.title"/></function>,
	    <function><link linkend="api.panda_addlinesegment" endterm="api.panda_addlinesegment.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmentone" endterm="api.panda_addquadraticcurvesegmentone.title"/></function>,
	    <function><link linkend="api.panda_addquadraticcurvesegmenttwo" endterm="api.panda_addquadraticcurvesegmenttwo.title"/></function>,
	    <function><link linkend="api.panda_closeline" endterm="api.panda_closeline.title"/></function>,
	    <function><link linkend="api.panda_rectangle" endterm="api.panda_rectangle.title"/></function>,
	    <function><link linkend="api.panda_endline" endterm="api.panda_endline.title"/></function>,
	    <function><link linkend="api.panda_strokeline" endterm="api.panda_strokeline.title"/></function>,
	    <function><link linkend="api.panda_fillline" endterm="api.panda_fillline.title"/></function>,
	    <function><link linkend="api.panda_setlinewidth" endterm="api.panda_setlinewidth.title"/></function>,
	    <function><link linkend="api.panda_setlinecap" endterm="api.panda_setlinecap.title"/></function>,
	    <function><link linkend="api.panda_setlinejoin" endterm="api.panda_setlinejoin.title"/></function>,
	    <function><link linkend="api.panda_setlinedash" endterm="api.panda_setlinedash.title"/></function>,
	    <function><link linkend="api.panda_setfillcolor" endterm="api.panda_setfillcolor.title"/></function>
	  </para>
        </refsect1>
      </refentry>
    </section>

    <section id="api.properties">
      <title id="api.properties.title">Document Properties</title>

      <para>
        These functions deal with the document properties.
      </para>

      <refentry id="api.panda_setauthor">
        <refnamediv>
          <refname id="api.panda_setauthor.title">panda_setauthor</refname>
          <refpurpose>set the author string for the PDF document</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setauthor</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>author</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function sets the value of the author within the PDF document.
	  </para>
	  <example id="api.panda_setauthor.example">
	    <title id="api.panda_setauthor.example.title"><function><link linkend="api.panda_setauthor" endterm="api.panda_setauthor.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_setauthor(document, "Mikal");
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setcreator" endterm="api.panda_setcreator.title"/></function>,
	    <function><link linkend="api.panda_settitle" endterm="api.panda_settitle.title"/></function>,
	    <function><link linkend="api.panda_setsubject" endterm="api.panda_setsubject.title"/></function>,
	    <function><link linkend="api.panda_setkeywords" endterm="api.panda_setkeywords.title"/></function>,
	    <function><link linkend="api.panda_setid" endterm="api.panda_setid.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setcreator">
        <refnamediv>
          <refname id="api.panda_setcreator.title">panda_setcreator</refname>
          <refpurpose>set the creator string for the PDF document</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setcreator</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>creator</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function sets the value of the creator within the PDF
	    document. This is normally the string "Panda", but may be
	    overridden by another call to the function by a user of
	    the API. I'm not sure why you would want to do that
	    though...
	  </para>
	  <example id="api.panda_setcreator.example">
	    <title id="api.panda_setcreator.example.title"><function><link linkend="api.panda_setcreator" endterm="api.panda_setcreator.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_setcreator(document, "Panda PDF Generator");
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setauthor" endterm="api.panda_setauthor.title"/></function>,
	    <function><link linkend="api.panda_settitle" endterm="api.panda_settitle.title"/></function>,
	    <function><link linkend="api.panda_setsubject" endterm="api.panda_setsubject.title"/></function>,
	    <function><link linkend="api.panda_setkeywords" endterm="api.panda_setkeywords.title"/></function>,
	    <function><link linkend="api.panda_setid" endterm="api.panda_setid.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_settitle">
        <refnamediv>
          <refname id="api.panda_settitle.title">panda_settitle</refname>
          <refpurpose>set the title string for the PDF document</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_settitle</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>title</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function sets the value of the title within the PDF document.
	  </para>
	  <example id="api.panda_settitle.example">
	    <title id="api.panda_settitle.example.title"><function><link linkend="api.panda_settitle" endterm="api.panda_settitle.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_settitle(document, "Mikal's excellent PDF document");
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setcreator" endterm="api.panda_setcreator.title"/></function>,
	    <function><link linkend="api.panda_setauthor" endterm="api.panda_setauthor.title"/></function>,
	    <function><link linkend="api.panda_setsubject" endterm="api.panda_setsubject.title"/></function>,
	    <function><link linkend="api.panda_setkeywords" endterm="api.panda_setkeywords.title"/></function>,
	    <function><link linkend="api.panda_setid" endterm="api.panda_setid.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setsubject">
        <refnamediv>
          <refname id="api.panda_setsubject.title">panda_setsubject</refname>
          <refpurpose>set the subject string for the PDF document</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_setsubject</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>subject</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function sets the value of the subject within the PDF document.
	  </para>
	  <example id="api.panda_setsubject.example">
	    <title id="api.panda_setsubject.example.title"><function><link linkend="api.panda_setsubject" endterm="api.panda_setsubject.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_setsubject(document, "Mikal's homework");
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setcreator" endterm="api.panda_setcreator.title"/></function>,
	    <function><link linkend="api.panda_setauthor" endterm="api.panda_setauthor.title"/></function>,
	    <function><link linkend="api.panda_settitle" endterm="api.panda_settitle.title"/></function>,
	    <function><link linkend="api.panda_setkeywords" endterm="api.panda_setkeywords.title"/></function>,
	    <function><link linkend="api.panda_setid" endterm="api.panda_setid.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_setkeywords">
        <refnamediv>
          <refname id="api.panda_setkeywords.title">panda_setkeywords</refname>
          <refpurpose>set the keywords string for the PDF document</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type></type>
            <methodname>panda_setkeywords</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>keywords</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function sets the value of the keywords string within
	    the PDF document. The string is merely a list of keywords
	    in the form "cats dogs hamsters chickens"
	  </para>
	  <example id="api.panda_setkeywords.example">
	    <title id="api.panda_setkeywords.example.title"><function><link linkend="api.panda_setkeywords" endterm="api.panda_setkeywords.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_setkeywords(document, "panda documentation pdf api generate");
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_setcreator" endterm="api.panda_setcreator.title"/></function>,
	    <function><link linkend="api.panda_setauthor" endterm="api.panda_setauthor.title"/></function>,
	    <function><link linkend="api.panda_settitle" endterm="api.panda_settitle.title"/></function>,
	    <function><link linkend="api.panda_setsubject" endterm="api.panda_setsubject.title"/></function>,
	    <function><link linkend="api.panda_setid" endterm="api.panda_setid.title"/></function>
	  </para>
        </refsect1>
      </refentry>
    </section>

    <section id="api.templates">
      <title id="api.templates.title">Templates</title>

      <refentry id="api.panda_newtemplate">
        <refnamediv>
          <refname id="api.panda_newtemplate.title">panda_newtemplate</refname>
          <refpurpose>create a template page in the PDF</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>panda_page *</type>
            <methodname>panda_newtemplate</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>char *</type>
              <parameter>pagesize</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function is used to create 'template' pages which can
	    then be refered to on other pages. For instance, if you
	    were creating a document that used a standard letter head,
	    then it would make sense to construct the letterhead as a
	    template, and then use this on all the pages. The created
	    template looks and feels just like any other page in the
	    document for the purposes of creating content. Refer to
	    the <function><link linkend="api.panda_newpage"
	    endterm="api.panda_newpage.title"/></function> section
	    for details on how to use pages.
	  </para>
	  <example id="api.panda_newtemplate.example">
	    <title id="api.panda_newtemplate.example.title"><function><link linkend="api.panda_newtemplate" endterm="api.panda_newtemplate.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *templatepage;

panda_init();

document = panda_open("filename.pdf", "w");
templatepage = panda_newtemplate (document, panda_pagesize_a4);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_applytemplate" endterm="api.panda_applytemplate.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_applytemplate">
        <refnamediv>
          <refname id="api.panda_applytemplate.title">panda_applytemplate</refname>
          <refpurpose>use a template page previously created</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_applytemplate</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>target</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>template</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function will apply <parameter>template</parameter> to <parameter>target</parameter>.
	  </para>
	  <example id="api.panda_applytemplate.example">
	    <title id="api.panda_applytemplate.example.title"><function><link linkend="api.panda_applytemplate" endterm="api.panda_applytemplate.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *templatepage, *realpage;

panda_init();

document = panda_open("filename.pdf", "w");
templatepage = panda_newtemplate (document, panda_pagesize_a4);
realpage = panda_newpage (document, panda_pagesize_a4);

/* ... the order of the drawing commands to the two pages doesn't matter ... */

panda_applytemplate(document, realpage, templatepage);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_newtemplate" endterm="api.panda_newtemplate.title"/></function>
	  </para>
        </refsect1>
      </refentry>
    </section>

    <section id="api.ui">
      <title id="api.ui.title">User Interface Functions</title>

      <refentry id="api.panda_hidetoolbar">
        <refnamediv>
          <refname id="api.panda_hidetoolbar.title">panda_hidetoolbar</refname>
          <refpurpose>ask the viewer to hide its tool bar when this PDF is displayed</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_hidetoolbar</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>onoroff</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function records information in the output PDF
	    document requesting that the viewing application's tool
	    bar not be displayed when this PDF is opened. This option
	    is not supported by all viewers, and therefore should not
	    be relied upon. The on or off arguement is a panda_true
	    value, which does the obvious thing. The default is to
	    show the tool bar.
	  </para>
	  <example id="api.panda_hidetoolbar.example">
	    <title id="api.panda_hidetoolbar.example.title"><function><link linkend="api.panda_hidetoolbar" endterm="api.panda_hidetoolbar.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_hidetoolbar(document, panda_true);
]]>
	    </programlisting>
	  </example>
        </refsect1>
      </refentry>

      <refentry id="api.panda_hidemenubar">
        <refnamediv>
          <refname id="api.panda_hidemenubar.title">panda_hidemenubar</refname>
          <refpurpose>ask the viewer to hide its menu bar when this PDF is displayed</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_hidemenubar</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>onoroff</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function records information in the output PDF
	    document requesting that the viewing application's menu
	    bar not be displayed when this PDF is opened. This option
	    is not supported by all viewers, and therefore should not
	    be relied upon. The on or off arguement is a panda_true
	    value, which does the obvious thing. The default is to
	    show the menu bar.
	  </para>
	  <example id="api.panda_hidemenubar.example">
	    <title id="api.panda_hidemenubar.example.title"><function><link linkend="api.panda_hidemenubar" endterm="api.panda_hidemenubar.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_hidemenubar(document, panda_true);
]]>
	    </programlisting>
	  </example>
        </refsect1>
      </refentry>

      <refentry id="api.panda_hidewindowui">
        <refnamediv>
          <refname id="api.panda_hidewindowui.title">panda_hidewindowui</refname>
          <refpurpose>ask the viewer to hide its display window user interface when this PDF is displayed</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type></type>
            <methodname>panda_hidewindowui</methodname>
            <methodparam>
              <type></type>
              <parameter></parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function records information in the output PDF
	    document requesting that the viewing application's window
	    user interface not be displayed when this PDF is
	    opened. This option is not supported by all viewers, and
	    therefore should not be relied upon. The on or off
	    arguement is a panda_true value, which does the obvious
	    thing. The default is to display the user interface.
	  </para>
	  <example id="api.panda_hidewindowui.example">
	    <title id="api.panda_hidewindowui.example.title"><function><link linkend="api.panda_hidewindowui" endterm="api.panda_hidewindowui.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_hidewindowui(document, panda_true);
]]>
	    </programlisting>
	  </example>
        </refsect1>
      </refentry>

      <refentry id="api.panda_fitwindow">
        <refnamediv>
          <refname id="api.panda_fitwindow.title">panda_fitwindow</refname>
          <refpurpose>ask the viewer to fit the viewer window to the first page of the PDF document when it is opened</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_fitwindow</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>onoroff</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function records information in the output PDF
	    document requesting that the viewing application fit the
	    display window to the first page of the PDF document when
	    it is opened. This option is not supported by all viewers,
	    and therefore should not be relied upon. The on or off
	    arguement is a panda_true value, which does the obvious
	    thing. The default is to not fit the document to the
	    window.
	  </para>
	  <example id="api.panda_fitwindow.example">
	    <title id="api.panda_fitwindow.example.title"><function><link linkend="api.panda_fitwindow" endterm="api.panda_fitwindow.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_fitwindow(document, panda_true);
]]>
	    </programlisting>
	  </example>
        </refsect1>
      </refentry>

      <refentry id="api.panda_centerwindow">
        <refnamediv>
          <refname id="api.panda_centerwindow.title">panda_centerwindow</refname>
          <refpurpose>ask the viewer to center the document's window on the screen when the PDF is displayed</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type></type>
            <methodname>panda_centerwindow</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>onoroff</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function records information in the output PDF
	    document requesting that the viewing application center
	    the displayed PDF document on the screen when it is
	    opened. This option is not supported by all viewers, and
	    therefore should not be relied upon. The on or off
	    arguement is a panda_true value, which does the obvious
	    thing. The default is to not center the window.
	  </para>
	  <example id="api.panda_centerwindow.example">
	    <title id="api.panda_centerwindow.example.title"><function><link linkend="api.panda_centerwindow" endterm="api.panda_centerwindow.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_centerwindow(document, panda_true);
]]>
	    </programlisting>
	  </example>
        </refsect1>
      </refentry>

      <refentry id="api.panda_nfspagemodde">
        <refnamediv>
          <refname id="api.panda_nfspagemodde.title">panda_nfspagemodde</refname>
          <refpurpose>defines display characteristics for the PDF document if it is using non fullscreen mode after defaulting to fullscreen mode</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type></type>
            <methodname>panda_nfspagemodde</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>pagemode</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    If the document in question is using fullscreen mode and
	    then exits from fullscreen mode, then this function
	    configures the behaviour of several of the 'eye candy'
	    options available in some viewers. The possible values for
	    pagemode are listed in the <link
	    linkend="api.constants.window"
	    endterm="api.constants.window.title"/> section. Please
	    note that this function will only have an effect on the
	    viewer if the page mode has been set to fullscreen with
	    the <function><link linkend="api.panda_fullscreen"
	    endterm="api.panda_fullscreen.title"/></function> function
	    call.
	  </para>
	  <example id="api.panda_nfspagemodde.example">
	    <title id="api.panda_nfspagemodde.example.title"><function><link linkend="api.panda_nfspagemodde" endterm="api.panda_nfspagemodde.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_nfspagemode(document, panda_window_usenone);
]]>
	    </programlisting>
	  </example>
        </refsect1>
      </refentry>

      <refentry id="api.panda_fullscreen">
        <refnamediv>
          <refname id="api.panda_fullscreen.title">panda_fullscreen</refname>
          <refpurpose>ask the viewer to display the PDF document in fullscreen mode</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_fullscreen</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>onoroff</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function records information in the output PDF
	    document requesting that the viewing application display
	    the document in full screen mode. This option is not
	    supported by all viewers, and therefore should not be
	    relied upon. The on or off arguement is a panda_true
	    value, which does the obvious thing. The default is to not
	    display the PDF in fullscreen mode.
	  </para>
	  <example id="api.panda_fullscreen.example">
	    <title id="api.panda_fullscreen.example.title"><function><link linkend="api.panda_fullscreen" endterm="api.panda_fullscreen.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_fullscreen(document, panda_true);
]]>
	    </programlisting>
	  </example>
        </refsect1>
      </refentry>

      <refentry id="api.panda_textdirection">
        <refnamediv>
          <refname id="api.panda_textdirection.title">panda_textdirection</refname>
          <refpurpose>specify the direction that the text flows within the document</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_textdirection</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>direction</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function records information within the PDF
	    indicating the direction that the text in the document
	    flows in. The possible values for the
	    <parameter>direction</parameter> arguement are listed in
	    the <link linkend="api.constants.textdirection"
	    endterm="api.constants.textdirection.title"/> section.
	  </para>
	  <example id="api.panda_textdirection.example">
	    <title id="api.panda_textdirection.example.title"><function><link linkend="api.panda_textdirection" endterm="api.panda_textdirection.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_textdirection(document, panda_textdirection_r2l);
]]>
	    </programlisting>
	  </example>
        </refsect1>
      </refentry>

      <refentry id="api.panda_pageduration">
        <refnamediv>
          <refname id="api.panda_pageduration.title">panda_pageduration</refname>
          <refpurpose>specify the maximum number of seconds that a page should be displayed by the viewer before moving on</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type>void</type>
            <methodname>panda_pageduration</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>duration</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function records information within the PDF
	    indicating the maximum number of seconds that the given
	    page should be displayed within the viewer. This is useful
	    for presentations and the like where you might like to
	    automatically move onto the next page in the document at
	    some point. The default value for this is to never move
	    onto the next page automatically. If this value is changed
	    from the default, there is currently no way to revert back
	    to the default later. The feature may not be implemented
	    by all viewers.
	  </para>
	  <example id="api.panda_pageduration.example">
	    <title id="api.panda_pageduration.example.title"><function><link linkend="api.panda_pageduration" endterm="api.panda_pageduration.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_pageduration (page, 30.5);
]]>
	    </programlisting>
	  </example>
        </refsect1>
      </refentry>

      <refentry id="api.panda_transduration">
        <refnamediv>
          <refname id="api.panda_transduration.title">panda_transduration</refname>
          <refpurpose>specify the number of seconds that a page transition effect should take to occur</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type></type>
            <methodname>panda_transduration</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>duration</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function records information within the PDF
	    indicating the maximum number of seconds that the given
	    page transition effect should be displayed within the
	    viewer. This is useful for presentations and the like when
	    you realise that you are addicted to <ulink
	    url="http://www.openoffice.org/">OpenOffice.org</ulink>
	    Impress...
	  </para>
	  <example id="api.panda_transduration.example">
	    <title id="api.panda_transduration.example.title"><function><link linkend="api.panda_transduration" endterm="api.panda_transduration.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_transduration (page, 30.5);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_transstyle" endterm="api.panda_transstyle.title"/></function>
	  </para>
        </refsect1>
      </refentry>

      <refentry id="api.panda_transstyle">
        <refnamediv>
          <refname id="api.panda_transstyle.title">panda_transstyle</refname>
          <refpurpose>specify the type of page change transition that should occur</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <methodsynopsis>
            <type></type>
            <methodname>panda_transstyle</methodname>
            <methodparam>
              <type>panda_pdf *</type>
              <parameter>document</parameter>
            </methodparam>
            <methodparam>
              <type>panda_page *</type>
              <parameter>page</parameter>
            </methodparam>
            <methodparam>
              <type>int</type>
              <parameter>style</parameter>
            </methodparam>
          </methodsynopsis>
          <para>
	    This function records information within the PDF
	    indicating the preferred page transition style to use. A
	    list of valid styles can be found in the <link
	    linkend="api.constants.pagetrans"
	    endterm="api.constants.pagetrans.title"/> section.
          </para>
          <para>
	    The default transition is to have no transition at all. It
	    should be noted that not all viewers support these
	    transition effects.
	  </para>
	  <example id="api.panda_transstyle.example">
	    <title id="api.panda_transstyle.example.title"><function><link linkend="api.panda_transstyle" endterm="api.panda_transstyle.title"/></function> example</title>
	    <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);

panda_transduration (page, 30.5);
]]>
	    </programlisting>
	  </example>
	  <para>
	    See also:
	    <function><link linkend="api.panda_transduration" endterm="api.panda_transduration.title"/></function>
	  </para>
        </refsect1>
      </refentry>
    </section>

    <section id="api.constants">
      <title id="api.constants.title">Constants</title>

      <refentry id="api.constants.bool">
        <refnamediv>
          <refname id="api.constants.bool.title">Boolean Constants</refname>
          <refpurpose>true and false</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_true</term>
              <listitem>
                <para>true</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_false</term>
              <listitem>
                <para>false</para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.valtype">
        <refnamediv>
          <refname id="api.constants.valtype.title">Value Type Constants</refname>
          <refpurpose>internal datatypes</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    These constants are internal to the library and should not
	    be used.
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_brackettedtextvalue</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_dictionaryvalue</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_integervalue</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_textvalue</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_literaltextvalue</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_objectvalue</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_objectarrayvalue</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_booleanvalue</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_doublevalue</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.travdir">
        <refnamediv>
          <refname id="api.constants.travdir.title">Traversal Direction Constants</refname>
          <refpurpose>Up and down movement for the traversal functions</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    These constants are internal to the library and should not
	    be used
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term></term>
              <listitem>
                <para>panda_up</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term></term>
              <listitem>
                <para>panda_down</para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.fmode">
        <refnamediv>
          <refname id="api.constants.fmode.title">File Mode Constants</refname>
          <refpurpose>file modes</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    These constants are internal to the library and should not
	    be used
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_write</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_writelinear</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.placeholder">
        <refnamediv>
          <refname id="api.constants.placeholder.title">Placeholder Object Constants</refname>
          <refpurpose>We have the concept of placeholder objects, that do not get written out to the PDF</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    These constants are internal to the library and should not
	    be used
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_placeholder</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_normal</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.pagesize">
        <refnamediv>
          <refname id="api.constants.pagesize.title">Page Size Constants</refname>
          <refpurpose>Standard page sizes</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    These constants represent standard page sizes. They are
	    expressed in inches, with 72 dots per inch with no
	    fractional values shown.
	  </para>
          <para>
            Most of the information contained in this section is from
            <ulink
            url="http://www.math.wayne.edu/~rrb/A4.html">http://www.math.wayne.edu/~rrb/A4.html</ulink>,
            which has a plethora of information regarding paper sizes,
            usage, history, and standards.
          </para>
          <para>
            The most common page sizes are A4 (panda_pagesize_a4) and
            US Letter (panda_pagesize_usletter) in North America.
          </para>
          <variablelist>
            <title>ISO 215 paper sizes</title>

            <varlistentry>
              <term>panda_pagesize_4a0</term>
              <listitem><para>ISO 215 4A0 - 1682 &#215; 2378 mm - "[0 0 4768 6735]"</para></listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_2a0</term>
              <listitem>
                <para>ISO 215 2A0 - 1189 &#215; 1682 mm - "[0 0 3370 4768]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_a0</term>
              <listitem>
                <para>ISO 215 A0 - 841 &#215; 1189 mm - "[0 0 2384 3370]"</para>
                <para>Commonly used for technical drawings and posters.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_a1</term>
              <listitem>
                <para>ISO 215 A1 - 594 &#215; 841 mm - "[0 0 1684 2384]"</para>
                <para>Commonly used for technical drawings, posters, and flip charts.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_a2</term>
              <listitem>
                <para>ISO 215 A2 - 420 &#215; 594 mm - "[0 0 1191 1684]"</para>
                <para>Commonly used flip charts, drawings, diagrams, and large tables.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_a3</term>
              <listitem>
                <para>ISO 215 A3 - 297 &#215; 420 mm - "[0 0 842 1191]"</para>
                <para>Commonly used drawings, diagrams, large tables, and newspapers.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_a4</term>
              <listitem>
                <para>ISO 215 A4 - 210 &#215; 297 mm - "[0 0 595 842]"</para>
                <para>Most commonly used paper size. Used for letters, magazines, etc.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_a5</term>
              <listitem>
                <para>ISO 215 A5 - 148 &#215; 210 mm - "[0 0 420 595]"</para>
                <para>Commonly used for note pads and books.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_a6</term>
              <listitem>
                <para>ISO 215 A6 - 105 &#215; 148 mm - "[0 0 298 420]"</para>
                <para>Commonly used for postcards and books.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_a7</term>
              <listitem>
                <para>ISO 215 A7 - 74 &#215; 105 mm - "[0 0 210 298]"</para>
                <para>Some ID cards (specifically, German).</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_a8</term>
              <listitem>
                <para>ISO 215 A8 - 52 &#215; 74 mm - "[0 0 147 210]"</para>
                <para>Commonly used for playing cards, sometimes business cards.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_a9</term>
              <listitem>
                <para>ISO 215 A9 - 37 &#215; 52 mm - "[0 0 105 147]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_a10</term>
              <listitem>
                <para>ISO 215 A10 - 26 &#215; 37 mm - "[0 0 74 105]"</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>panda_pagesize_b0</term>
              <listitem>
                <para>ISO 215 B0 - 1000 &#215; 1414 mm - "[0 0 2835 4008]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_b1</term>
              <listitem>
                <para>ISO 215 B1 - 707 &#215; 1000 mm - "[0 0 2004 2835]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_b2</term>
              <listitem>
                <para>ISO 215 B2 - 500 &#215; 707 mm - "[0 0 1417 2004]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_b3</term>
              <listitem>
                <para>ISO 215 B3 - 353 &#215; 500 mm - "[0 0 1001 1417]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_b4</term>
              <listitem>
                <para>ISO 215 B4 - 250 &#215; 353 mm - "[0 0 709 1001]"</para>
                <para>Commonly used for newspapers.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_b5</term>
              <listitem>
                <para>ISO 215 B5 - 176 &#215; 250 mm - "[0 0 499 709]"</para>
                <para>Commonly used for books.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_b6</term>
              <listitem>
                <para>ISO 215 B6 - 125 &#215; 176 mm - "[0 0 354 499]"</para>
                <para>Commonly used for books.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_b7</term>
              <listitem>
                <para>ISO 215 B7 - 88 &#215; 125 mm - "[0 0 249 354]"</para>
                <para>Standard passport.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_b8</term>
              <listitem>
                <para>ISO 215 B8 - 62 &#215; 88 mm - "[0 0 176 249]"</para>
                <para>Commonly used for playing cards.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_b9</term>
              <listitem>
                <para>ISO 215 B9 - 44 &#215; 62 mm - "[0 0 125 176]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_b10</term>
              <listitem>
                <para>ISO 215 B10 - 31 &#215; 44 mm - "[0 0 88 125]"</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>panda_pagesize_c0</term>
              <listitem>
                <para>ISO 215 C0 - 917 &#215; 1297 mm - "[0 0 2599 3677]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_c1</term>
              <listitem>
                <para>ISO 215 C1 - 648 &#215; 917 mm - "[0 0 1837 2599]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_c2</term>
              <listitem>
                <para>ISO 215 C2 - 458 &#215; 648 mm - "[0 0 1298 1837]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_c3</term>
              <listitem>
                <para>ISO 215 C3 - 324 &#215; 458 mm - "[0 0 918 1298]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_c4</term>
              <listitem>
                <para>ISO 215 C4 - 229 &#215; 324 mm - "[0 0 649 918]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_c5</term>
              <listitem>
                <para>ISO 215 C5 - 162 &#215; 229 mm - "[0 0 459 649]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_c6</term>
              <listitem>
                <para>ISO 215 C6 - 114 &#215; 162 mm - "[0 0 323 459]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_c7</term>
              <listitem>
                <para>ISO 215 C7 - 81 &#215; 114 mm - "[0 0 230 323]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_c8</term>
              <listitem>
                <para>ISO 215 C8 - 57 &#215; 81 mm - "[0 0 162 230]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_c9</term>
              <listitem>
                <para>ISO 215 C9 - 40 &#215; 57 mm - "[0 0 113 162]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_c10</term>
              <listitem>
                <para>ISO 215 C10 - 28 &#215; 40 mm - "[0 0 79 113]"</para>
              </listitem>
            </varlistentry>
          </variablelist>

          <variablelist>
            <title>Raw formats</title>
            <varlistentry>
              <term>panda_pagesize_ra0</term>
              <listitem>
                <para>Raw format A series 0 - 860 &#215; 1220 mm - "[0 0 2438 3458]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_ra1</term>
              <listitem>
                <para>Raw format A series 1 - 610 &#215; 860 mm - "[0 0 1729 2438]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_ra2</term>
              <listitem>
                <para>Raw format A series 2 - 430 &#215; 610 mm - "[0 0 1219 1729]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_ra3</term>
              <listitem>
                <para>Raw format A series 3 - 305 &#215; 430 mm - "[0 0 865 1219]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_ra4</term>
              <listitem>
                <para>Raw format A series 4 - 215 &#215; 305 mm - "[0 0 609 865]"</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>panda_pagesize_sra0</term>
              <listitem>
                <para>Supplementary raw format A series 0 - 900 &#215; 1280 mm - "[0 0 2551 3628]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_sra1</term>
              <listitem>
                <para>Supplementary raw format A series 1 - 640 &#215; 900 mm - "[0 0 1814 2551]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_sra2</term>
              <listitem>
                <para>Supplementary raw format A series 2 - 450 &#215; 640 mm - "[0 0 1276 1814]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_sra3</term>
              <listitem>
                <para>Supplementary raw format A series 3 - 320 &#215; 450 mm - "[0 0 907 1276]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_sra4</term>
              <listitem>
                <para>Supplementary raw format A series 4 - 225 &#215; 320 mm - "[0 0 225 907]"</para>
              </listitem>
            </varlistentry>
          </variablelist>

          <variablelist>
            <title>US/Canada formats</title>
            <varlistentry>
              <term>panda_pagesize_usletter</term>
              <listitem>
                <para>US letter - 8.5 x 11 in - "[0 0 612 792]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_uslegal</term>
              <listitem>
                <para>US legal - 8.5 x 14 in - "[0 0 612 1008]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_usexecutive</term>
              <listitem>
                <para>US executive - 7.25 x 10.5 in - "[0 0 522 756]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_usledger</term>
              <listitem>
                <para>US ledger - 11 x 17 in - "[0 0 792 1224]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_usarch1</term>
              <listitem>
                <para>ARCH 1 - 9 &#215; 12 in - "[0 0 648 864]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_usarch2</term>
              <listitem>
                <para>ARCH 2 - 12 &#215; 18 in - "[0 0 864 1298]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_usarch3</term>
              <listitem>
                <para>ARCH 3 - 18 &#215; 24 in - "[0 0 1298 1728]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_usarch4</term>
              <listitem>
                <para>ARCH 4 - 24 &#215; 36 in - "[0 0 1728 2592]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_usarch5</term>
              <listitem>
                <para>ARCH 5 - 30 &#215; 42 in - "[0 0 2160 3024]"</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_usarch6</term>
              <listitem>
                <para>ARCH 6 - 36 &#215; 48 in - "[0 0 2592 3456]"</para>
              </listitem>
            </varlistentry>
          </variablelist>

          <variablelist>
            <title>Miscellaneous sizes</title>
            <varlistentry>
              <term>panda_pagesize_overheada</term>
              <listitem>
                <para>ISO 7943-1 overhead projector type A - 250 x 250 mm - "[0 0 709 709]"</para>
                <para>Corners rounded at a radius <= 60 mm</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_overheadb</term>
              <listitem>
                <para>ISO 7943-1 overhead projector type B - 285 x 285 mm - "[0 0 808 808]"</para>
                <para>Corners rounded or cut off diagonally at a radius <= 40 mm.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>panda_pagesize_id1</term>
              <listitem>
                <para>ISO 7810 ID-1 - 3.370 &#215; 2.125 in - "[0 0 343 153]"</para>
                <para>This is the most common format for credit cards, business cards, and most driver's licenses.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_id2</term>
              <listitem>
                <para>ISO 7810 ID-2 - 105 &#215; 74 mm (A7) - "[0 0 298 210]"</para>
                <para>German ID cards use this format.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagesize_id3</term>
              <listitem>
                <para>ISO 7810 ID-3 - 125 &#215; 88 mm (B7) - "[0 0 354 249]"</para>
                <para>Standard passport size.</para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.textmode">
        <refnamediv>
          <refname id="api.constants.textmode.title">Text Mode Constants</refname>
          <refpurpose>text drawing modes</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    For more information, see page 343 of version 1.3 of the PDF Reference.
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_textmode_normal</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_textmode_outline</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_textmode_filledoutline</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_textmode_invisible</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_textmode_filledclipped</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_textmode_strokedclipped</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_textmode_filledstrokedclipped</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_textmode_clipped</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.linecap">
        <refnamediv>
          <refname id="api.constants.linecap.title">Line Cap Constants</refname>
          <refpurpose>line cap styles</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    For more information, see page 139 of the PDF Reference v1.3 II
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_linecap_butt</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_linecap_round</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_linecap_projectedsquare</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_linecap_max</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.linejoin">
        <refnamediv>
          <refname id="api.constants.linejoin.title">Line Join Constants</refname>
          <refpurpose>line join styles</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    For more information, see page 140 of the PDF Reference v1.3 II
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_linejoin_miter</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_linejoin_round</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_linejoin_bevel</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_linejoin_max</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.imgtype">
        <refnamediv>
          <refname id="api.constants.imgtype.title">Image Type Constants</refname>
          <refpurpose>image types supported by Panda</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    These constants represent the different image types supported by Panda
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_image_png</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_image_jpeg</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_image_tiff</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.window">
        <refnamediv>
          <refname id="api.constants.window.title">Window Display Mode Constants</refname>
          <refpurpose>display modes for the viewer window</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    The display modes that the viewer window can be asked to conform to
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_window_usenone</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_window_useoutlines</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_window_usethumbs</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_window_</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.textdirection">
        <refnamediv>
          <refname id="api.constants.textdirection.title">Text Direction Constants</refname>
          <refpurpose>directions in which to display the text</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    Possible text directions (for reading the document)
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_textdirection_l2r</term>
              <listitem>
                <para>Left to right</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_textdirection_r2l</term>
              <listitem>
                <para>Right to left</para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.pagetrans">
        <refnamediv>
          <refname id="api.constants.pagetrans.title">Page Transition Effect Constants</refname>
          <refpurpose>different fancy transition effects</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    Possible page transition effects
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_pagetrans_split_yi</term>
              <listitem>
                <para>vertical split from the inside of the page</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_split_yo</term>
              <listitem>
                <para>vertical split from the outside of the page</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_split_xi</term>
              <listitem>
                <para>horizontal split from the inside of the page</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_split_xo</term>
              <listitem>
                <para>horizontal split from the outside of the page</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_blinds_y</term>
              <listitem>
                <para>vertical blinds effect</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_blinds_x</term>
              <listitem>
                <para>horizontal blinds effect</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_box_i</term>
              <listitem>
                <para>box expanding from the inside of the page</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_box_o</term>
              <listitem>
                <para>box contracting from the outside of the page</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_wipe_0</term>
              <listitem>
                <para>a single line wipes the page away from the left to the right</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_wipe_90</term>
              <listitem>
                <para>a single line wipes the page away from the bottom to the top</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_wipe_180</term>
              <listitem>
                <para>a single line wipes the page away from the right to the left</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_wipe_270</term>
              <listitem>
                <para>a single line wipes the page away from the top to the bottom</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_dissolve</term>
              <listitem>
                <para>the old page dissolves slowly into the new page</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_glitter_0</term>
              <listitem>
                <para>a glitter effect that moves from the left to the right of the page</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_glitter_270</term>
              <listitem>
                <para>a glitter effect that moves from the top to the bottom of the page</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_glitter_315</term>
              <listitem>
                <para>a glitter effect that moves from the top left to the bottom right of the page</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_pagetrans_</term>
              <listitem>
                <para>no transition effect</para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.icon">
        <refnamediv>
          <refname id="api.constants.icon.title">Annotation Icon Constants</refname>
          <refpurpose>possible annotation icons</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    Constants representing possible annotation icons
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_icon_comment</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_icon_help</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_icon_insert</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_icon_newparagraph</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_icon_newparagraph</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_icon_note</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_icon_paragraph</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.annotationflag">
        <refnamediv>
          <refname id="api.constants.annotationflag.title">Annotation Flag Constants</refname>
          <refpurpose>flags for annotation objects</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    Flags on annotation objects (these are bit fields to be OR'ed)
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_annotationflag_invisible</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_annotationflag_hidden</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_annotationflag_print</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_annotationflag_nozoom</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_annotationflag_norotate</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_annotationflag_noview</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_annotationflag_readonly</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.object_property">
        <refnamediv>
          <refname id="api.constants.object_property.title">Object Property Constants</refname>
          <refpurpose>properties that might be held by objects</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    These constants are internal to the library and should not
	    be used.
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_object_property_compress</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_object_property_compress_level</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_object_property_ignorepageerrors</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_object_property_binarystreamfile</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_object_property_layoutstreamfile</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_object_property_max</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.scope">
        <refnamediv>
          <refname id="api.constants.scope.title">Scope Constants</refname>
          <refpurpose>scopes of properties</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    These constants are internal to the library and should not
	    be used.
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_scope_cascade</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_scope_local</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.halign">
        <refnamediv>
          <refname id="api.constants.halign.title">Horizontal Alignment Constants</refname>
          <refpurpose>justification/horizontal alignment types</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    Justification and horizontal alignment types.
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_halign_left</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_halign_right</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_halign_center</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_halign_justify</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.valign">
        <refnamediv>
          <refname id="api.constants.valign.title">Vertical Alignment Constants</refname>
          <refpurpose>vertical alignment types</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    Constants representing different vertical alignment schemes.
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_valign_top</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_valign_middle</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_valign_bottom</term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.constants.misc">
        <refnamediv>
          <refname id="api.constants.misc.title">Miscallaneous Constants</refname>
          <refpurpose>constants that don't fit anywhere else</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    These are constants that Panda uses, but do not merit their own category
	  </para>
          <variablelist>
            <title>Constants</title>

            <varlistentry>
              <term>panda_pi</term>
              <listitem>
                <para>3.1415926535</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>panda_default_compress_level</term>
              <listitem>
                <para>This is generally defined as 6, but don't count on it.</para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>
    </section>

    <section id="api.struct">
      <title id="api.struct.title">Data Structures</title>

      <refentry id="api.struct.panda_object">
        <refnamediv>
          <refname id="api.struct.panda_object.title">panda_object</refname>
          <refpurpose>represent an object.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    This structure is internal to the Panda PDF library and
	    should not be used
	  </para>
          <variablelist>
            <title>Elements</title>

            <varlistentry>
              <term>
	        <type>int</type> <parameter>type</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>number</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>generation</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>textmode</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>insidegraphicsblock</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>unsigned long</type> <parameter>byteOffset</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>char *</type> <parameter>currentSetFont</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>char *</type> <parameter>layoutstream</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>char *</type> <parameter>binarystream</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>char *</type> <parameter>layoutstreamFilename</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>char *</type> <parameter>binarystreamFilename</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>unsigned long</type> <parameter>layoutstreamLength</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>unsigned long</type> <parameter>binarystreamLength</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>void *</type> <parameter>children</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>void *</type> <parameter>cachedLastChild</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>isPages</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>isContents</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>isPlaceholder</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>char *</type> <parameter>cascadeproperties</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>char *</type> <parameter>localproperties</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.struct.panda_page">
        <refnamediv>
          <refname id="api.struct.panda_page.title">panda_page</refname>
          <refpurpose>represent a page</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <variablelist>
            <title>Elements</title>

            <varlistentry>
              <term>
	        <type>panda_object *</type> <parameter>obj</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>panda_object *</type> <parameter>contents</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>height</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>width</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>isTemplate</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.struct.panda_child">
        <refnamediv>
          <refname id="api.struct.panda_child.title">panda_child</refname>
          <refpurpose>represent a child</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <variablelist>
            <title>Elements</title>

            <varlistentry>
              <term>
	        <type>panda_object *</type> <parameter>me</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>struct panda_internal_child *</type> <parameter>next</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.struct.panda_pagelist">
        <refnamediv>
          <refname id="api.struct.panda_pagelist.title">panda_pagelist</refname>
          <refpurpose>a list of pages in a PDF</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <variablelist>
            <title>Elements</title>

            <varlistentry>
              <term>
	        <type>panda_object *</type> <parameter>me</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>struct panda_internal_pagelist *</type> <parameter>next</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.struct.panda_xref">
        <refnamediv>
          <refname id="api.struct.panda_xref.title">panda_xref</refname>
          <refpurpose>an xref list</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <variablelist>
            <title>Elements</title>

            <varlistentry>
              <term>
	        <type>panda_object *</type> <parameter>me</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>struct panda_internal_xref *</type> <parameter>next</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.struct.panda_outline">
        <refnamediv>
          <refname id="api.struct.panda_outline.title">panda_outline</refname>
          <refpurpose>represent the outline structure</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <para>
	    This object is used by <link
	    linkend="api.panda_outlineitem"
	    endterm="api.panda_outlineitem.title"/>, and <link
	    linkend="api.panda_writeoutline"
	    endterm="api.panda_writeoutline.title"/> to represent the
	    outline (bookmark) structure of a PDF.
	  </para>
          <variablelist>
            <title>Elements</title>

            <varlistentry>
              <term>
	        <type>panda_object *</type> <parameter>obj</parameter>
	      </term>
              <listitem>
                <para>A pointer to the outline object.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>struct panda_internal_outline *</type> <parameter>oldest</parameter>
	      </term>
              <listitem>
                <para>The first item at this level with this parent.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>struct panda_internal_outline *</type> <parameter>prev</parameter>
	      </term>
              <listitem>
                <para>The previous item in the outline at this level with this parent.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>struct panda_internal_outline *</type> <parameter>parent</parameter>
	      </term>
              <listitem>
                <para>The parent of the outline item.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>struct panda_internal_outline *</type> <parameter>next</parameter>
	      </term>
              <listitem>
                <para>The next item in the outline at this level with this parent.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>struct panda_internal_outline *</type> <parameter>youngest</parameter>
	      </term>
              <listitem>
                <para>The last item in the outline at this level with this parent.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>count</parameter>
	      </term>
              <listitem>
                <para>The number of items in the outline at this level.</para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.struct.panda_pdf">
        <refnamediv>
          <refname id="api.struct.panda_pdf.title">panda_pdf</refname>
          <refpurpose>a structure representing a PDF</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <variablelist>
            <title>Elements</title>

            <varlistentry>
              <term>
	        <type>FILE *</type> <parameter>file</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>panda_object *</type> <parameter>catalog</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>panda_object *</type> <parameter>pages</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>panda_object *</type> <parameter>fonts</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>panda_object *</type> <parameter>info</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>panda_object *</type> <parameter>linear</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>unsigned long</type> <parameter>byteOffset</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>unsigned long</type> <parameter>xrefOffset</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>nextObjectNumber</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>nextPHObjectNumber</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>pageCount</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>totalObjectNumber</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>panda_xref *</type> <parameter>xrefList</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>panda_xref *</type> <parameter>xrefTail</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>mode</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>char *</type> <parameter>convertedTiff</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>char *</type> <parameter>currentFont</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>currentFontSize</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>currentFontSize</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>double</type> <parameter>currentCharacterSpacing</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>double</type> <parameter>currentWordSpacing</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>double</type> <parameter>currentHorizontalScaling</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>double</type> <parameter>currentLeading</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>nextFontNumber</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>panda_pagelist *</type> <parameter>pageholders</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>panda_object *</type> <parameter>dummyObj</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>void *</type> <parameter>db</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>

      <refentry id="api.struct.panda_fontmetric">
        <refnamediv>
          <refname id="api.struct.panda_fontmetric.title">panda_fontmetric</refname>
          <refpurpose>a structure containing font information</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Description</title>
          <variablelist>
            <title>Elements</title>

            <varlistentry>
              <term>
	        <type>char *</type> <parameter>fontName</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
	        <type>int</type> <parameter>characterWidth[256]</parameter>
	      </term>
              <listitem>
                <para></para>
              </listitem>
            </varlistentry>
	  </variablelist>
	</refsect1>
      </refentry>
    </section>

    <section id="api.internal">
      <title id="api.internal.title">Internal Functions</title>

      <para>
        These functions are internal to the Panda PDF library, and should not
	be used by outside applications.
      </para>

      <section id="api.internal.basic">
        <title id="api.internal.basic.title">Basic Functions</title>

        <refentry id="api.panda_open_suppress">
          <refnamediv>
            <refname id="api.panda_open_suppress.title">panda_open_suppress</refname>
            <refpurpose>open a PDF document with some special options</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>panda_pdf *</type>
              <methodname>panda_open_suppress</methodname>
              <methodparam>
                <type>char *</type>
                <parameter>filename</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>mode</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Open the named PDF document with the mode specified. The only mode currently
	      supported is "w", but others will be integrated later. The interface to this
	      function is identical in it's behaviour to the <function>fopen</function>
	      function call offered by the ANSI C standard IO library. This function call
	      additionally doesn't create any of the default objects that a panda_open
	      would create, which is useful when you want to parse an existing PDF into a
	      new document.
	    </para>
	    <example id="api.panda_open_suppress.example">
	      <title id="api.panda_open_suppress.example.title"><function><link linkend="api.panda_open_suppress" endterm="api.panda_open_suppress.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open_suppress("filename.pdf", "w");
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_init" endterm="api.panda_init.title"/></function>,
	      <function><link linkend="api.panda_open_actual" endterm="api.panda_open_actual.title"/></function>,
	      <function><link linkend="api.panda_open" endterm="api.panda_open.title"/></function>,
	      <function><link linkend="api.panda_close" endterm="api.panda_close.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_open_actual">
          <refnamediv>
            <refname id="api.panda_open_actual.title">panda_open_actual</refname>
            <refpurpose>actually open a PDF document</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>panda_pdf *</type>
              <methodname>panda_open_actual</methodname>
              <methodparam>
                <type>void</type>
	        <parameter></parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Open the named PDF document with the mode specified. The only mode currently
	      supported is "w", but others will be integrated later. The interface to this
	      function is identical in it's behaviour to the <function>fopen</function>
	      function call offered by the ANSI C standard IO library. This call actually
	      does the opening for <function><link linkend="api.panda_open" endterm="api.panda_open.title"/></function> and
	      <function><link linkend="api.panda_open_suppress" endterm="api.panda_open_suppress.title"/></function>.
	    </para>
  	    <para>
	      You should not use this function- use
	      <link linkend="api.panda_open" endterm="api.panda_open.title"><function><link linkend="api.panda_open" endterm="api.panda_open.title"/></function></link>
	      instead.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_init" endterm="api.panda_init.title"/></function>,
	      <function><link linkend="api.panda_open_suppress" endterm="api.panda_open_suppress.title"/></function>,
	      <function><link linkend="api.panda_open" endterm="api.panda_open.title"/></function>,
	      <function><link linkend="api.panda_close" endterm="api.panda_close.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_checkinfo">
          <refnamediv>
            <refname id="api.panda_checkinfo.title">panda_checkinfo</refname>
            <refpurpose>ensure an info object exists</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_checkinfo</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function call ensures that the info object exists
	      inside the PDF document so that information may be safely
	      added. This function call is unlikely to be needed by
	      users of the API because it is used whenever one of the
	      info object functions is called by the Panda code itself.
	    </para>
	    <example id="api.panda_checkinfo.example">
	      <title id="api.panda_checkinfo.example.title"><function><link linkend="api.panda_checkinfo" endterm="api.panda_checkinfo.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_checkinfo(document);
]]>
	      </programlisting>
	    </example>
          </refsect1>
        </refentry>

        <refentry id="api.panda_createandinsertpage">
          <refnamediv>
            <refname id="api.panda_createandinsertpage.title">panda_createandinsertpage</refname>
            <refpurpose>create a page within the PDF document</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>panda_page *</type>
              <methodname>panda_createandinsertpage</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function creates the objects required for a page to
	      exist within Panda. This function is wrappered by other
	      Panda function calls.
	    </para>
	    <example id="api.panda_createandinsertpage.example">
	      <title id="api.panda_createandinsertpage.example.title"><function><link linkend="api.panda_createandinsertpage" endterm="api.panda_createandinsertpage.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_createandinsertpage(document);
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_newpage" endterm="api.panda_newpage.title"/></function>
	    </para>
          </refsect1>
        </refentry>
      </section>

      <section id="api.internal.text">
        <title id="api.internal.text.title">Text Functions</title>

        <refentry id="api.panda_closetext">
          <refnamediv>
            <refname id="api.panda_closetext.title">panda_closetext</refname>
            <refpurpose>a traversal callback used for closing text streams within the PDF</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_closetext</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>subject</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function is called by the <function><link linkend="api.panda_traverseobjects" endterm="api.panda_traverseobjects.title"/></function> function
	      to write out streams attached to objects when <function><link linkend="api.panda_close" endterm="api.panda_close.title"/></function> call.
	      You shouldn't need to ever call this function.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_createfont">
          <refnamediv>
            <refname id="api.panda_createfont.title">panda_createfont</refname>
            <refpurpose>return a handle to the requested font</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>char *</type>
              <methodname>panda_createfont</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>fontname</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>type</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>encoding</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This funtion call creates a font object for the requested
	      font and returns the identifier that should be used when
	      the font is set within the PDF document.
	    </para>
	    <para>
	      This function will return a font identifier (handle) as a
	      null terminated string on success, or NULL on failure.
	    </para>
	    <example id="api.panda_createfont.example">
	      <title id="api.panda_createfont.example.title"><function><link linkend="api.panda_createfont" endterm="api.panda_createfont.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *output;
char *fonthandle;

panda_init();
output = panda_open("output.pdf", "w");
fonthandle = (output, "Helventica", 3, "MacRomanEncoding");
]]>
	      </programlisting>
	    </example>
          </refsect1>
        </refentry>

        <refentry id="api.panda_getfontobj">
          <refnamediv>
            <refname id="api.panda_getfontobj.title">panda_getfontobj</refname>
            <refpurpose>get the object that the named font is stored in</refpurpose>
            </refnamediv>
            <refsect1>
              <title>Description</title>
              <methodsynopsis>
              <type>panda_object *</type>
              <methodname>panda_getfontobj</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>font</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function is used to map a font identifier handed to
	      Panda by a user to the object that actually stores the
	      font requested. This is because the PDF specification
	      actually wants a reference to this object, instead of
	      merely the name of the font.
	    </para>
	    <example id="api.panda_getfontobj.example">
	      <title id="api.panda_getfontobj.example.title"><function><link linkend="api.panda_getfontobj" endterm="api.panda_getfontobj.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *output;

panda_init();
output = panda_open("output.pdf", "w");

fonthandle = panda_createfont (output, "Helventica", 3, "MacRomanEncoding");
printf("The font was stored in object number %d\n",
  (panda_getfont (output, fonthandle))->number);
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_createfont" endterm="api.panda_createfont.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_getfontmetric">
          <refnamediv>
            <refname id="api.panda_getfontmetric.title">panda_getfontmetric</refname>
            <refpurpose>retrieve a fontmetric</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>panda_fontmetric *</type>
              <methodname>panda_getfontmetric</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Locate the metric for the currently selected font, if not
	      available fall back on the empty font metric (all zero
	      widths, so no wrapping.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_charwidth">
          <refnamediv>
            <refname id="api.panda_charwidth.title">panda_charwidth</refname>
            <refpurpose>calculate the width of a character</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>double</type>
              <methodname>panda_charwidth</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>char</type>
                <parameter>c</parameter>
              </methodparam>
              <methodparam>
                <type>panda_fontmetric *</type>
                <parameter>fontmetric</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>addCharSpacing</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Calculate the width of <parameter>c</parameter> using the
	      specified <parameter>fontmetric</parameter> and the text
	      settings
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_stringwidth">
          <refnamediv>
            <refname id="api.panda_stringwidth.title">panda_stringwidth</refname>
            <refpurpose>calculate the width of a string</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>double</type>
              <methodname>panda_stringwidth</methodname>
              <methodparam>
                <type>panda_pdf *</type>
              <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>text</parameter>
              </methodparam>
              <methodparam>
                <type>panda_fontmetric *</type>
                <parameter>fontmetric</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Calculate the width of <parameter>text</parameter> using
	      the specified <parameter>fontmetric</parameter> and the
	      text settings if the fontmetric is specified as NULL then
	      look them up for the current font as specified in output.
	    </para>
	    <example id="api.panda_stringwidth.example">
	      <title id="api.panda_stringwidth.example.title"><function><link linkend="api.panda_stringwidth" endterm="api.panda_stringwidth.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>


]]>
	      </programlisting>
	    </example>
          </refsect1>
        </refentry>

        <refentry id="api.panda_findlinebreak">
          <refnamediv>
            <refname id="api.panda_findlinebreak.title">panda_findlinebreak</refname>
            <refpurpose>find the next line break</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>int</type>
              <methodname>panda_findlinebreak</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>text</parameter>
              </methodparam>
              <methodparam>
                <type>panda_fontmetric *</type>
                <parameter>fontmetric</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>wrapwidth</parameter>
              </methodparam>
              <methodparam>
                <type>double *</type>
                <parameter>linewidth</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Find the next logical line break in text for the current
	      font settings, assuming a maximum width of wrapWidth, if
	      lineWidth is non NULL store the actual line width (in
	      points) into it, return the number of character to the
	      next line break.
	    </para>
          </refsect1>
        </refentry>
      </section>

      <section id="api.internal.annotate">
        <title id="api.internal.annotate.title">Annotations</title>

        <refentry id="api.panda_insertannotation">
          <refnamediv>
            <refname id="api.panda_insertannotation.title">panda_insertannotation</refname>
            <refpurpose>actually insert an annotation</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>panda_object *</type>
              <methodname>panda_insertannotation</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_page *</type>
                <parameter>page</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>top</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>left</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>bottom</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>right</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>flags</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function call creates the object to store the annotation and the common elements which are required.
	    </para>
	    <para>
	      <function><link linkend="api.panda_insertannotation" endterm="api.panda_insertannotation.title"/></function> returns a pointer to the annotation object which was created.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_textannotation" endterm="api.panda_textannotation.title"/></function>,
	      <function><link linkend="api.panda_freetextannotation" endterm="api.panda_freetextannotation.title"/></function>,
	      <function><link linkend="api.panda_lineannotation" endterm="api.panda_lineannotation.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_internallink">
          <refnamediv>
            <refname id="api.panda_internallink.title">panda_internallink</refname>
            <refpurpose>do work common to <function><link linkend="api.panda_urilink" endterm="api.panda_urilink.title"/></function> and <function><link linkend="api.panda_link" endterm="api.panda_link.title"/></function></refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_internallink</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>link</parameter>
              </methodparam>
              <methodparam>
                <type>panda_page *</type>
                <parameter>page</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>top</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>left</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>bottom</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>right</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>border</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function will create set up common properties of a link annotation.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_urilink" endterm="api.panda_urilink.title"/></function>,
	      <function><link linkend="api.panda_link" endterm="api.panda_link.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_writeoutline">
          <refnamediv>
            <refname id="api.panda_writeoutline.title">panda_writeoutline</refname>
            <refpurpose>write an outline to a document</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_writeoutline</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_outline *</type>
                <parameter>outline</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This recursive function is called to write an outline to a PDF. It is called automatically
	      by <link linkend="api.panda_close">panda_close</link> and should <emphasis>not</emphasis>
	      be called anywhere else.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_outlineitem" endterm="api.panda_outlineitem.title"/></function>
	    </para>
          </refsect1>
        </refentry>
      </section>

      <section id="api.internal.database">
        <title id="api.internal.database.title">Database Functions</title>

        <refentry id="api.panda_dbopen">
          <refnamediv>
            <refname id="api.panda_dbopen.title">panda_dbopen</refname>
            <refpurpose>prepare the Panda internal database for use</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_dbopen</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This command opens the database which is used to store
	      information about things like dictionary items which have
	      been created in the document. The use of this database
	      makes Panda much more reliable than it has previously
	      been.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_dbclose" endterm="api.panda_dbclose.title"/></function>,
	      <function><link linkend="api.panda_dbwrite" endterm="api.panda_dbwrite.title"/></function>,
	      <function><link linkend="api.panda_dbread" endterm="api.panda_dbread.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_dbclose">
          <refnamediv>
            <refname id="api.panda_dbclose.title">panda_dbclose</refname>
            <refpurpose>finalize the use of the Panda internal database</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_dbclose</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This command closes the database which is used to store
	      information about things like dictionary items which have
	      been created in the document. The use of this database
	      makes Panda much more reliable than it has previously
	      been.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_dbopen" endterm="api.panda_dbopen.title"/></function>,
	      <function><link linkend="api.panda_dbwrite" endterm="api.panda_dbwrite.title"/></function>,
	      <function><link linkend="api.panda_dbread" endterm="api.panda_dbread.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_dbwrite">
          <refnamediv>
            <refname id="api.panda_dbwrite.title">panda_dbwrite</refname>
            <refpurpose>write a value into the Panda internal database</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_dbwrite</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>key</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>value</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function write a value into the Panda internal database.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_dbopen" endterm="api.panda_dbopen.title"/></function>,
	      <function><link linkend="api.panda_dbwrite" endterm="api.panda_dbwrite.title"/></function>,
	      <function><link linkend="api.panda_dbread" endterm="api.panda_dbread.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_dbread">
          <refnamediv>
            <refname id="api.panda_dbread.title">panda_dbread</refname>
            <refpurpose>read a value from the Panda internal database</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>char *</type>
              <methodname>panda_dbread</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>key</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function reads a value from the Panda internal database.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_dbopen" endterm="api.panda_dbopen.title"/></function>,
	      <function><link linkend="api.panda_dbclose" endterm="api.panda_dbclose.title"/></function>,
	      <function><link linkend="api.panda_dbwrite" endterm="api.panda_dbwrite.title"/></function>
	    </para>
          </refsect1>
        </refentry>
      </section>

      <section id="api.internal.image">
        <title id="api.internal.image.title">Image Functions</title>

        <refentry id="api.panda_imageboxactual">
          <refnamediv>
            <refname id="api.panda_imageboxactual.title">panda_imageboxactual</refname>
            <refpurpose>add an image</refpurpose>
          </refnamediv>
          <refsect1>
          <title>Description</title>
            <methodsynopsis>
              <type></type>
              <methodname>panda_imageboxactual</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_page *</type>
                <parameter>page</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>top</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>left</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>bottom</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>right</parameter>
              </methodparam>
              <methodparam>
                <type>double</type>
                <parameter>angle</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>filename</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>type</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function will add an image to
	      <parameter>document</parameter>, regardless of whether or
	      not there is an existing copy.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_imageboxrot" endterm="api.panda_imageboxrot.title"/></function>,
	      <function><link linkend="api.panda_imageboxinternal" endterm="api.panda_imageboxinternal.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_imageboxinternal">
          <refnamediv>
            <refname id="api.panda_imageboxinternal.title">panda_imageboxinternal</refname>
            <refpurpose>redistribute the image types</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type></type>
              <methodname>panda_imageboxinternal</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_page *</type>
                <parameter>page</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>top</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>left</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>bottom</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>right</parameter>
              </methodparam>
              <methodparam>
                <type>double</type>
                <parameter>angle</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>filename</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>type</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>addImage</parameter>
              </methodparam>
              <methodparam>
                <type>char</type>
                <parameter>objref</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>databasecount</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Redistribute the image types
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_imageboxrot" endterm="api.panda_imageboxrot.title"/></function>,
	      <function><link linkend="api.panda_imageboxactual" endterm="api.panda_imageboxactual.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.libtiffDummyReadProc">
          <refnamediv>
            <refname id="api.libtiffDummyReadProc.title">libtiffDummyReadProc</refname>
            <refpurpose>mangle libtiff to do image conversion in memory without temporary files</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>static tsize_t</type>
              <methodname>libtiffDummyReadProc</methodname>
              <methodparam>
                <type>thandle_t</type>
                <parameter>fd</parameter>
              </methodparam>
              <methodparam>
                <type>tdata_t</type>
                <parameter>buff</parameter>
              </methodparam>
              <methodparam>
                <type>tsize_t</type>
                <parameter>size</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This call implements a dummy read procedure for libtiff to
	      allow for the conversion of TIFF images on the fly in
	      memory without the use of temporary files. It is an
	      internal call and should NEVER be called by users of the
	      API.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.libtiffDummyWriteProc" endterm="api.libtiffDummyWriteProc.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.libtiffDummyWriteProc">
          <refnamediv>
            <refname id="api.libtiffDummyWriteProc.title">libtiffDummyWriteProc</refname>
            <refpurpose>mangle libtiff to do image conversion in memory without temporary files</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>static tsize_t</type>
              <methodname>libtiffDummyWriteProc</methodname>
              <methodparam>
                <type>thandle_t</type>
                <parameter>fd</parameter>
              </methodparam>
              <methodparam>
                <type>tdata_t</type>
                <parameter>buff</parameter>
              </methodparam>
              <methodparam>
                <type>tsize_t</type>
                <parameter>size</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This call implements a dummy write procedure for libtiff
	      to allow for the conversion of TIFF images on the fly in
	      memory without the use of temporary files. It is an
	      internal call and should NEVER be called by users of the
	      API.
	    </para>
	    <para>
	      See also:
	      <link linkend="api.libtiffDummyReadProc"><function>libtiffDummyReadProc</function></link>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.libtiffDummySeekProc">
          <refnamediv>
            <refname id="api.libtiffDummySeekProc.title">libtiffDummySeekProc</refname>
            <refpurpose>mangle libtiff to doc image conversion in memory without temportary files</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>static toff_t</type>
              <methodname>libtiffDummySeekProc</methodname>
              <methodparam>
                <type>thandle_t</type>
                <parameter>fd</parameter>
              </methodparam>
              <methodparam>
                <type>toff_t</type>
                <parameter>off</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>i</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This call implements a dummy seek procedure for libtiff to
	      allow for the conversion of TIFF images on the fly in
	      memory without the use of temporary files. It is an
	      internal call and should NEVER be called by users of the
	      API.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.libtiffDummyCloseProc">
          <refnamediv>
            <refname id="api.libtiffDummyCloseProc.title">libtiffDummyCloseProc</refname>
            <refpurpose>mangle libtiff to do image conversion in memory without temportary files</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>static int</type>
              <methodname>libtiffDummyCloseProc</methodname>
              <methodparam>
                <type>thandle_t</type>
                <parameter>fd</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This call implements a dummy close procedure for libtiff
	      to allow for the conversion of TIFF images on the fly in
	      memory without the use of temporary files. It is an
	      internal call and should NEVER be called by users of the
	      API.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.libpngDummyWriteProc">
          <refnamediv>
            <refname id="api.libpngDummyWriteProc.title">libpngDummyWriteProc</refname>
            <refpurpose>mangle libpng to do image conversion in memory without temporary files</refpurpose>
          </refnamediv>
          <refsect1>
          <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>libpngDummyWriteProc</methodname>
              <methodparam>
                <type>structp</type>
                <parameter>png</parameter>
              </methodparam>
              <methodparam>
                <type>bytep</type>
                <parameter>data</parameter>
              </methodparam>
              <methodparam>
                <type>uint</type>
                <parameter>len</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This call implements a dummy write proceedure for
	      libpng. This is needed so that Panda can get at the
	      compressed PNG data, whilst converting it on the fly from
	      unsupported PNG variants, and while not having to deal
	      with temporary files. PDF documents only need the content
	      of the IDAT chunks within the PNG file, and this method
	      eases gaining access to those chunks.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.libpngDummyFlushProc">
          <refnamediv>
            <refname id="api.libpngDummyFlushProc.title">libpngDummyFlushProc</refname>
            <refpurpose>mangle libpng to do image conversion in memory without temportary files</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>libpngDummyFlushProc</methodname>
              <methodparam>
                <type>structp</type>
                <parameter>png</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This call implements a dummy flush proceedure for
	      libpng. This is needed so that Panda can get at the
	      compressed PNG data, whilst converting it on the fly from
	      unsupported PNG variants, and while not having to deal
	      with temporary files. PDF documents only need the content
	      of the IDAT chunks within the PNG file, and this method
	      eases gaining access to those chunks.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_imagesizeTIFF">
          <refnamediv>
            <refname id="api.panda_imagesizeTIFF.title">panda_imagesizeTIFF</refname>
            <refpurpose>determine the size of a TIFF image</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_imagesizeTIFF</methodname>
              <methodparam>
                <type>int *</type>
                <parameter>width</parameter>
              </methodparam>
              <methodparam>
                <type>int *</type>
                <parameter>height</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>filename</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function will determine the size of
	      <parameter>filename</parameter>, and place the dimensions
	      in <parameter>width</parameter> and
	      <parameter>height</parameter>.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_imagesize" endterm="api.panda_imagesize.title"/></function>
	      <function><link linkend="api.panda_imagesizeJPEG" endterm="api.panda_imagesizeJPEG.title"/></function>
	      <function><link linkend="api.panda_imagesizePNG" endterm="api.panda_imagesizePNG.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_imagesizeJPEG">
          <refnamediv>
            <refname id="api.panda_imagesizeJPEG.title">panda_imagesizeJPEG</refname>
            <refpurpose>determine the size of a JPEG image</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_imagesizeJPEG</methodname>
              <methodparam>
                <type>int *</type>
                <parameter>width</parameter>
              </methodparam>
              <methodparam>
                <type>int *</type>
                <parameter>height</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>filename</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function will determine the size of
	      <parameter>filename</parameter>, and place the dimensions
	      in <parameter>width</parameter> and
	      <parameter>height</parameter>.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_imagesize" endterm="api.panda_imagesize.title"/></function>
	      <function><link linkend="api.panda_imagesizeTIFF" endterm="api.panda_imagesizeTIFF.title"/></function>
	      <function><link linkend="api.panda_imagesizePNG" endterm="api.panda_imagesizePNG.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_imagesizePNG">
          <refnamediv>
            <refname id="api.panda_imagesizePNG.title">panda_imagesizePNG</refname>
            <refpurpose>determine the size of a PNG image</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_imagesizePNG</methodname>
              <methodparam>
                <type>int *</type>
                <parameter>width</parameter>
              </methodparam>
              <methodparam>
                <type>int *</type>
                <parameter>height</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>filename</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function will determine the size of
	      <parameter>filename</parameter>, and place the dimensions
	      in <parameter>width</parameter> and
	      <parameter>height</parameter>.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_imagesize" endterm="api.panda_imagesize.title"/></function>
	      <function><link linkend="api.panda_imagesizeJPEG" endterm="api.panda_imagesizeJPEG.title"/></function>
	      <function><link linkend="api.panda_imagesizeTIFF" endterm="api.panda_imagesizeTIFF.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_entergraphicsmode">
          <refnamediv>
            <refname id="api.panda_entergraphicsmode.title">panda_entergraphicsmode</refname>
            <refpurpose>make sure the page description stream is in graphics mode</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_entergraphicsmode</methodname>
              <methodparam>
                <type>panda_page *</type>
                <parameter>page</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      PDF pages are described with a text stream full of
	      commands. Many of these commands are similar to those used
	      within Postscript. This function call ensures that the
	      text stream is in a graphics state.
	    </para>
	    <example id="api.panda_entergraphicsmode.example">
	      <title id="api.panda_entergraphicsmode.example.title"><function><link linkend="api.panda_entergraphicsmode" endterm="api.panda_entergraphicsmode.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);
panda_entergraphicsmode (page);
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_exitgraphicsmode" endterm="api.panda_exitgraphicsmode.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_exitgraphicsmode">
          <refnamediv>
            <refname id="api.panda_exitgraphicsmode.title">panda_exitgraphicsmode</refname>
            <refpurpose>exit graphics mode</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_exitgraphicsmode</methodname>
              <methodparam>
                <type>panda_page *</type>
                <parameter>page</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      PDF pages are described with a text stream full of
	      commands. Many of these commands are similar to those used
	      within Postscript. This function call ensures that the
	      text stream is not in a graphics state.
	    </para>
	    <example id="api.panda_exitgraphicsmode.example">
	      <title id="api.panda_exitgraphicsmode.example.title"><function><link linkend="api.panda_exitgraphicsmode" endterm="api.panda_exitgraphicsmode.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_page *page;

panda_init();

document = panda_open("filename.pdf", "w");
page = panda_newpage (document, panda_pagesize_a4);
panda_entergraphicsmode (page);
/* ... */
panda_exitgraphicsmode (page);
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_entergraphicsmode" endterm="api.panda_entergraphicsmode.title"/></function>
	    </para>
          </refsect1>
        </refentry>
      </section>

      <section id="api.internal.properties">
        <title id="api.internal.properties.title">Document Properties</title>

        <refentry id="api.panda_setid">
          <refnamediv>
            <refname id="api.panda_setid.title">panda_setid</refname>
            <refpurpose>set the id string for the PDF document</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type></type>
              <methodname>panda_setid</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>pdf</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>filename</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function sets the value of the document id within the
	      PDF document. This is based on an MD5 hash of the file
	      creation time, and the file path. Adobe products use some
	      other stuff, but this should be sufficient to have a
	      unique hash generated.
	    </para>
	    <example id="api.panda_setid.example">
	      <title id="api.panda_setid.example.title"><function><link linkend="api.panda_setid" endterm="api.panda_setid.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");
panda_setid(document, "filename.pdf");
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_setcreator" endterm="api.panda_setcreator.title"/></function>,
	      <function><link linkend="api.panda_setauthor" endterm="api.panda_setauthor.title"/></function>,
	      <function><link linkend="api.panda_settitle" endterm="api.panda_settitle.title"/></function>,
	      <function><link linkend="api.panda_setsubject" endterm="api.panda_setsubject.title"/></function>,
	      <function><link linkend="api.panda_setkeywords" endterm="api.panda_setkeywords.title"/></function>
	    </para>
          </refsect1>
        </refentry>
      </section>

      <section id="api.internal.memory">
        <title id="api.internal.memory.title">Memory</title>

        <refentry id="api.panda_xmalloc">
          <refnamediv>
            <refname id="api.panda_xmalloc.title">panda_xmalloc</refname>
            <refpurpose>allocate some memory</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void *</type>
              <methodname>panda_xmalloc</methodname>
              <methodparam>
                <type>size_t</type>
                <parameter>size</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Allocate some memory, performing all of the error checking so we don't have to elsewhere.
	    </para>
	    <example id="api.panda_xmalloc.example">
	      <title id="api.panda_xmalloc.example.title"><function><link linkend="api.panda_xmalloc" endterm="api.panda_xmalloc.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

char *memory;

memory = (char *) panda_xmalloc(42);
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_xrealloc" endterm="api.panda_xrealloc.title"/></function>,
	      <function><link linkend="api.panda_xfree" endterm="api.panda_xfree.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_xrealloc">
          <refnamediv>
            <refname id="api.panda_xrealloc.title">panda_xrealloc</refname>
            <refpurpose>allocate some memory, resizing it if already exists</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type></type>
              <methodname>panda_xrealloc</methodname>
              <methodparam>
                <type>void *</type>
                <parameter>memory</parameter>
              </methodparam>
              <methodparam>
                <type>size_t</type>
                <parameter>size</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Allocate some memory, performing all of the error checking
	      so we don't have to elsewhere. Resize the memory if it
	      already exists.
	    </para>
	    <example id="api.panda_xrealloc.example">
	      <title id="api.panda_xrealloc.example.title"><function><link linkend="api.panda_xrealloc" endterm="api.panda_xrealloc.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

char *memory;

memory = (char *) panda_xrealloc(memory, 42);
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_xmalloc" endterm="api.panda_xmalloc.title"/></function>,
	      <function><link linkend="api.panda_xfree" endterm="api.panda_xfree.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_xfree">
          <refnamediv>
            <refname id="api.panda_xfree.title">panda_xfree</refname>
            <refpurpose>deallocate memory in a safe manner</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type></type>
              <methodname>panda_xfree</methodname>
              <methodparam>
                <type>void *</type>
                <parameter>memory</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Deallocate a block of memory in a safe manner. For
	      instance, some systems will not allow you to free a NULL
	      pointer...
	    </para>
	    <example id="api.panda_xfree.example">
	      <title id="api.panda_xfree.example.title"><function><link linkend="api.panda_xfree" endterm="api.panda_xfree.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

char *p;
p = panda_xmalloc(42);
panda_xrealloc(p);
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_xmalloc" endterm="api.panda_xmalloc.title"/></function>
	      <function><link linkend="api.panda_xrealloc" endterm="api.panda_xrealloc.title"/></function>
	    </para>
          </refsect1>
        </refentry>
      </section>

      <section id="api.internal.objects">
        <title id="api.internal.objects.title">Objects</title>

        <refentry id="api.panda_newobject">
          <refnamediv>
            <refname id="api.panda_newobject.title">panda_newobject</refname>
            <refpurpose>create a new object</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>panda_object *</type>
              <methodname>panda_newobject</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>type</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Create a new object within the PDF document output. The
	      types of object are panda_object_normal and
	      panda_object_placeholder -- the difference is that a
	      placeholder object wont be written out when the PDF is
	      dumped to disc. This is an internal function call and
	      would only be need by API users if they are creating
	      support for object types not currently supported by
	      Panda. If this is the case, then these users are
	      encouraged to submit their code changes back to the
	      <ulink
	      url="mailto:panda-development@lists.sourceforge.net">panda-development</ulink>
	      mailing list for inclusion with the next release of
	      Panda.
	    </para>
	    <example id="api.panda_newobject.example">
	      <title id="api.panda_newobject.example.title"><function><link linkend="api.panda_newobject" endterm="api.panda_newobject.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_object *obj;

panda_init();

document = panda_open("filename.pdf", "w");
obj = panda_newobject(document, panda_object_normal);
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_freeobject" endterm="api.panda_freeobject.title"/></function>,
	      <function><link linkend="api.panda_writeobject" endterm="api.panda_writeobject.title"/></function>,
	      <function><link linkend="api.panda_traverseobjects" endterm="api.panda_traverseobjects.title"/></function>,
	      <function><link linkend="api.panda_addchild" endterm="api.panda_addchild.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_adddictitem">
          <refnamediv>
            <refname id="api.panda_adddictitem.title">panda_adddictitem</refname>
            <refpurpose>add an item to a dictionary</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type></type>
              <methodname>panda_adddictitem</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>input</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>name</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>type</parameter>
              </methodparam>
              <methodparam>
                <type></type>
                <parameter>...</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function will create an item in the
	      <parameter>input</parameter> dictionary named
	      <parameter>name</parameter> and of type
	      <parameter>type</parameter>. The remaining arguments are
	      variable and depend on <parameter>type</parameter>.
	    </para>
	    <para>
	      This function is indispensable for those looking to
	      extend Panda's functionality.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_adddictiteminternal" endterm="api.panda_adddictiteminternal.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_adddictiteminternal">
          <refnamediv>
            <refname id="api.panda_adddictiteminternal.title">panda_adddictiteminternal</refname>
            <refpurpose>insert data into the dictionary at a given location</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>char *</type>
              <methodname>panda_adddictiteminternal</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>passdictno</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>dictelem</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>name</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>valueType</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>value</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function will insert data into the dictionary at a given location
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_adddictitem" endterm="api.panda_adddictitem.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_getobjdictno">
          <refnamediv>
            <refname id="api.panda_getobjdictno.title">panda_getobjdictno</refname>
            <refpurpose>get the dictionary number associated with an object</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>int</type>
              <methodname>panda_getobjdictno</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>input</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function will retrieve the number associated with
	      <parameter>input</parameter> from
	      <parameter>document</parameter>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_getdictelem">
          <refnamediv>
            <refname id="api.panda_getdictelem.title">panda_getdictelem</refname>
            <refpurpose>find the dictionary element we are looking for</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>int</type>
              <methodname>panda_getdictelem</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>dictno</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>name</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function will look for <parameter>name</parameter>
	      in dictionary <parameter>dictno</parameter> of
	      <parameter>document</parameter>.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_finddictitem">
          <refnamediv>
            <refname id="api.panda_finddictitem.title">panda_finddictitem</refname>
            <refpurpose>find a dictionary item</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>char *</type>
              <methodname>panda_finddictitem</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>input</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>name</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Find a given dictionary item, and return the database
	      key for the value element
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_dbread" endterm="api.panda_dbread.title"/></function>,
	      <function><link linkend="api.panda_dbwrite" endterm="api.panda_dbwrite.title"/></function>
	      <function><link linkend="api.panda_finddictiteminternal" endterm="api.panda_finddictiteminternal.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_finddictiteminternal">
          <refnamediv>
            <refname id="api.panda_finddictiteminternal.title">panda_finddictiteminternal</refname>
            <refpurpose>find a dictionary item</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type></type>
              <methodname>panda_finddictiteminternal</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>dictno</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>name</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Internal version of the <link
	      linkend="api.panda_finddictitem"><function><link linkend="api.panda_finddictitem" endterm="api.panda_finddictitem.title"/></function></link>
	      function.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_finddictitem" endterm="api.panda_finddictitem.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_freeobject">
          <refnamediv>
            <refname id="api.panda_freeobject.title">panda_freeobject</refname>
            <refpurpose>free the memory used by a previously created object</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_freeobject</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>input</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function call frees the memory used by an
	      object. It is used during the cleanup process prior to
	      finishing closing a PDF document. Even if a user of the
	      API has added object types to their code, they should
	      not have to call this function, as their objects should
	      be added to the object tree via
	      <function><link linkend="api.panda_addchild" endterm="api.panda_addchild.title"/></function> to ensure they are
	      written to disc by
	      <function><link linkend="api.panda_writeobject" endterm="api.panda_writeobject.title"/></function> having been
	      traversed by <function><link linkend="api.panda_traverseobjects" endterm="api.panda_traverseobjects.title"/></function>
	      at PDF close time.
	    </para>
	    <example id="api.panda_freeobject.example">
	      <title id="api.panda_freeobject.example.title"><function><link linkend="api.panda_freeobject" endterm="api.panda_freeobject.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_object *obj;

panda_init();

document = panda_open("filename.pdf", "w");
obj = panda_newobject(document, panda_object_normal);
panda_freeobject(document, obj);
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_newobject" endterm="api.panda_newobject.title"/></function>,
	      <function><link linkend="api.panda_xfree" endterm="api.panda_xfree.title"/></function>,
	      <function><link linkend="api.panda_freetempobject" endterm="api.panda_freetempobject.title"/></function>,
	      <function><link linkend="api.panda_freeobjectactual" endterm="api.panda_freeobjectactual.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_freetempobject">
          <refnamediv>
            <refname id="api.panda_freetempobject.title">panda_freetempobject</refname>
            <refpurpose>free the memory used by a previously created object</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_freetempobject</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>input</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>freedict</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function call frees the memory used by an
	      object. It is used during the cleanup process prior to
	      finishing closing a PDF document. Even if a user of the
	      API has added object types to their code, they should
	      not have to call this function, as their objects should
	      be added to the object tree via
	      <function><link linkend="api.panda_addchild" endterm="api.panda_addchild.title"/></function> to ensure they are
	      written to disc by
	      <function><link linkend="api.panda_writeobject" endterm="api.panda_writeobject.title"/></function> having been
	      traversed by <function><link linkend="api.panda_traverseobjects" endterm="api.panda_traverseobjects.title"/></function>
	      at PDF close time.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_newobject" endterm="api.panda_newobject.title"/></function>,
	      <function><link linkend="api.panda_xfree" endterm="api.panda_xfree.title"/></function>,
	      <function><link linkend="api.panda_freeobject" endterm="api.panda_freeobject.title"/></function>,
	      <function><link linkend="api.panda_freeobjectactual" endterm="api.panda_freeobjectactual.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_freeobjectactual">
          <refnamediv>
            <refname id="api.panda_freeobjectactual.title">panda_freeobjectactual</refname>
            <refpurpose>free the memory used by a previously created object</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_freeobjectactual</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>input</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>freedict</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>freechildren</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function call frees the memory used by an
	      object. It is used during the cleanup process prior to
	      finishing closing a PDF document. Even if a user of the
	      API has added object types to their code, they should
	      not have to call this function, as their objects should
	      be added to the object tree via
	      <function><link linkend="api.panda_addchild" endterm="api.panda_addchild.title"/></function> to ensure they are
	      written to disc by
	      <function><link linkend="api.panda_writeobject" endterm="api.panda_writeobject.title"/></function> having been
	      traversed by <function><link linkend="api.panda_traverseobjects" endterm="api.panda_traverseobjects.title"/></function>
	      at PDF close time.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_newobject" endterm="api.panda_newobject.title"/></function>,
	      <function><link linkend="api.panda_xfree" endterm="api.panda_xfree.title"/></function>,
	      <function><link linkend="api.panda_freeobject" endterm="api.panda_freeobject.title"/></function>,
	      <function><link linkend="api.panda_freetempobject" endterm="api.panda_freetempobject.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_writeobject">
          <refnamediv>
            <refname id="api.panda_writeobject.title">panda_writeobject</refname>
            <refpurpose>write a given object to disc</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_writeobject</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>input</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Writes all objects created with
	      <function><link linkend="api.panda_newobject" endterm="api.panda_newobject.title"/></function>, that have been
	      added to the object tree with
	      <function><link linkend="api.panda_addchild" endterm="api.panda_addchild.title"/></function> via a call to
	      <function><link linkend="api.panda_traverseobjects" endterm="api.panda_traverseobjects.title"/></function>.
	    </para>
	    <example id="api.panda_writeobject.example">
	      <title id="api.panda_writeobject.example.title"><function><link linkend="api.panda_writeobject" endterm="api.panda_writeobject.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_object *obj;

panda_init();

document = panda_open("filename.pdf", "w");
obj = panda_newobject(document, panda_object_normal);
panda_writeobject(document, obj);
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_newobject" endterm="api.panda_newobject.title"/></function>
	      <function><link linkend="api.panda_addchild" endterm="api.panda_addchild.title"/></function>
	      <function><link linkend="api.panda_traverseobjects" endterm="api.panda_traverseobjects.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_writedictionary">
          <refnamediv>
            <refname id="api.panda_writedictionary.title">panda_writedictionary</refname>
            <refpurpose>dump a specific dictionary to the PDF file</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_writedictionary</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>dictionary</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Recursively write a dictionary to the PDF.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_writedictionaryinternal" endterm="api.panda_writedictionaryinternal.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_writedictionaryinternal">
          <refnamediv>
            <refname id="api.panda_writedictionaryinternal.title">panda_writedictionaryinternal</refname>
            <refpurpose>dump a dictionary to the PDF</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type></type>
              <methodname>panda_writedictionaryinternal</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>dictno</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>depth</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Recursively write a dictionary to the PDF.
	    </para>
	    <para>
	      See also:
	      <function><link linkend="api.panda_writedictionary" endterm="api.panda_writedictionary.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_addchild">
          <refnamediv>
            <refname id="api.panda_addchild.title">panda_addchild</refname>
            <refpurpose>add an object to the object tree</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_addchild</methodname>
              <methodparam>
                <type>panda_object *</type>
                <parameter>parent</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>child</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Once an object has been created with
	      <function><link linkend="api.panda_newobject" endterm="api.panda_newobject.title"/></function> it is added to the
	      object tree with this call. This ensures it is written
	      out to disc via <function><link linkend="api.panda_writeobject" endterm="api.panda_writeobject.title"/></function>
	      when <function><link linkend="api.panda_close" endterm="api.panda_close.title"/></function> is called.
	    </para>
	    <example id="api.panda_addchild.example">
	      <title id="api.panda_addchild.example.title"><function><link linkend="api.panda_addchild" endterm="api.panda_addchild.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_object *obj, *obj2;

panda_init();

document = panda_open("filename.pdf", "w");
obj = panda_newobject(document, panda_object_normal);
obj2 = panda_newobject(document, panda_object_normal);
panda_addhild(obj, obj2);
]]>
	      </programlisting>
	    </example>
          </refsect1>
        </refentry>

        <refentry id="api.panda_traverseobjects">
          <refnamediv>
            <refname id="api.panda_traverseobjects.title">panda_traverseobjects</refname>
            <refpurpose>traverse the PDF object tree and perform an operation</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_traverseobjects</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>startObject</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>direction</parameter>
              </methodparam>
              <methodparam>
                <type>traverseFunct</type>
                <parameter>function</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function traverses the object tree created by
	      <function><link linkend="api.panda_addchild" endterm="api.panda_addchild.title"/></function> and repeatedly calls
	      the function defined as a callback. The traversal has a
	      direction as defined by: panda_up (bottom up) or
	      panda_down (top down). This call is commonly used by
	      <function><link linkend="api.panda_close" endterm="api.panda_close.title"/></function> to call
	      <function><link linkend="api.panda_writeobject" endterm="api.panda_writeobject.title"/></function> and
	      <function><link linkend="api.panda_freeobject" endterm="api.panda_freeobject.title"/></function>. API users might
	      also find it useful, although I wouldn't know why.
	    </para>
	    <example id="api.panda_traverseobjects.example">
	      <title id="api.panda_traverseobjects.example.title"><function><link linkend="api.panda_traverseobjects" endterm="api.panda_traverseobjects.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;

panda_init();

document = panda_open("filename.pdf", "w");

/* ... create a whole bunch of objects and add them to the tree ... */
panda_traverseobjects(document, document->catalog, panda_down, panda_writeobject);
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_processtrans" endterm="api.panda_processtrans.title"/></function>
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_processtrans">
          <refnamediv>
            <refname id="api.panda_processtrans.title">panda_processtrans</refname>
            <refpurpose>a traversal callback used for processing transition objects within the PDF</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_processtrans</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>panda_object *</type>
                <parameter>subject</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function is called by the <function><link linkend="api.panda_traverseobjects" endterm="api.panda_traverseobjects.title"/></function>
	      function to deal with transition effects attached to objects when
	      <function><link linkend="api.panda_close" endterm="api.panda_close.title"/></function> call. You shouldn't need to ever call this
	      function.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_setobjectproperty">
          <refnamediv>
            <refname id="api.panda_setobjectproperty.title">panda_setobjectproperty</refname>
            <refpurpose>set a property value for an object</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_setobjectproperty</methodname>
              <methodparam>
                <type>panda_object *</type>
                <parameter>input</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>scope</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>propid</parameter>
              </methodparam>
              <methodparam>
                <type>int</type>
                <parameter>propval</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Properties are a way of specifing things about
	      objects. These properties can have either a cascade
	      scope (they affect all subsequently created objects that
	      are children of that object) -- see the <link
	      linkend="api.constants.scope"
	      endterm="api.constants.scope.title"/> section for
	      details.
	    </para>
	    <example id="api.panda_setobjectproperty.example">
	      <title id="api.panda_setobjectproperty.example.title"><function><link linkend="api.panda_setobjectproperty" endterm="api.panda_setobjectproperty.title"/></function> example</title>
	      <programlisting>
<![CDATA[
#include <panda/constants.h>
#include <panda/functions.h>

panda_pdf *document;
panda_object *obj;

panda_init();

document = panda_open("filename.pdf", "w");
obj = panda_newobject(document, panda_object_normal);
panda_setproperty(obj, panda_scope_cascade, panda_object_property_compress, panda_true);
]]>
	      </programlisting>
	    </example>
	    <para>
	      See also:
	      <function><link linkend="api.panda_newobject" endterm="api.panda_newobject.title"/></function>
	    </para>
          </refsect1>
        </refentry>
      </section>

      <section id="api.internal.misc">
        <title id="api.internal.misc.title">Miscellaneous Functions</title>

        <refentry id="api.panda_writetrailer">
          <refnamediv>
            <refname id="api.panda_writetrailer.title">panda_writetrailer</refname>
            <refpurpose>write out the trailer for the PDF document</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type></type>
              <methodname>panda_writetrailer</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This command is used to write out the trailer of the PDF
	      document, which contains information about the PDF
	      document, including a pointer to the XREF table.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_writexref">
          <refnamediv>
            <refname id="api.panda_writexref.title">panda_writexref</refname>
            <refpurpose>write out the table that lists object locations in the file</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type></type>
              <methodname>panda_writexref</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      Write out the XREF table in the PDF file that we have just generated.
	    </para>
          </refsect1>
        </refentry>
      </section>

      <section id="api.internal.output">
        <title id="api.internal.output.title">Output Functions</title>

        <refentry id="api.panda_printf">
          <refnamediv>
            <refname id="api.panda_printf.title">panda_printf</refname>
            <refpurpose>output a formatted string to the PDF file</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_printf</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>format</parameter>
              </methodparam>
              <methodparam>
                <type></type>
                <parameter>...</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function call behaves just like
	      <function>printf</function>, but the output goes to a
	      PDF file, instead of to stdout.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_streamprintf">
          <refnamediv>
            <refname id="api.panda_streamprintf.title">panda_streamprintf</refname>
            <refpurpose>output a formatted string to the text stream associated with a given object</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>char *</type>
              <methodname>panda_streamprintf</methodname>
              <methodparam>
                <type>char *</type>
                <parameter>stream</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>format</parameter>
              </methodparam>
              <methodparam>
                <type></type>
                <parameter>...</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function call behaves just like
	      <function>printf</function>, but the output goes to a
	      textstream within a PDF object, instead of to
	      stdout. Set the value of the textstream to the value
	      returned...
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_putc">
          <refnamediv>
            <refname id="api.panda_putc.title">panda_putc</refname>
            <refpurpose>output a single character to the PDF file</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_putc</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>char</type>
                <parameter>c</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function call behaves just like
	      <function>putc</function>, but the output goes to a PDF
	      file, instead of to stdout.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_print">
          <refnamediv>
            <refname id="api.panda_print.title">panda_print</refname>
            <refpurpose>output a simple string to the PDF file</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>void</type>
              <methodname>panda_print</methodname>
              <methodparam>
                <type>panda_pdf *</type>
                <parameter>document</parameter>
              </methodparam>
              <methodparam>
                <type>char *</type>
                <parameter>string</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function call behaves just like
	      <function>putc</function>, but the output goes to a PDF
	      file, instead of to stdout. It also writes more than one
	      character at a time to the file, which is faster than
	      doing this with a panda_printf.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_xsnprintf">
          <refnamediv>
            <refname id="api.panda_xsnprintf.title">panda_xsnprintf</refname>
            <refpurpose>a safe version of vnsprintf</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>char *</type>
              <methodname>panda_xsnprintf</methodname>
              <methodparam>
                <type>char *</type>
                <parameter>format</parameter>
              </methodparam>
              <methodparam>
                <type></type>
                <parameter>...</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This command behaves like a slightly modified version of
	      <function>vsnprintf</function>. The main difference is
	      that if catches the various different ways that errors
	      can be returned, and turns these into a single NULL is a
	      string big enough to hold the formatted string could not
	      be allocated.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_md5hash">
          <refnamediv>
            <refname id="api.panda_md5hash.title">panda_md5hash</refname>
            <refpurpose>a wrapper to Rivest's MD5 code</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>char *</type>
              <methodname>panda_md5hash</methodname>
              <methodparam>
                <type>char *</type>
                <parameter>input</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function generates a hash on the given string and then returns that hash.
	    </para>
          </refsect1>
        </refentry>

        <refentry id="api.panda_hexstring">
          <refnamediv>
            <refname id="api.panda_hexstring.title">panda_hexstring</refname>
            <refpurpose>take a string of possibly binary bytes, and represent them in hex</refpurpose>
          </refnamediv>
          <refsect1>
            <title>Description</title>
            <methodsynopsis>
              <type>char *</type>
              <methodname>panda_hexstring</methodname>
              <methodparam>
                <type>char *</type>
                <parameter>input</parameter>
              </methodparam>
            </methodsynopsis>
            <para>
	      This function converts a binary array of chars into an
	      array of hex characters. An assumption is made that
	      there are no zero bytes in the middle of the string.
	    </para>
          </refsect1>
        </refentry>
      </section>
    </section>
  </chapter>
</book>
